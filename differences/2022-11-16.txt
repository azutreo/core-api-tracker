Added Class AIActivity
	Added Property string AIActivity.name [ReadOnly]
	Added Property AIActivityHandler AIActivity.owner [ReadOnly]
	Added Property number AIActivity.priority [RequiresAuthority]
	Added Property boolean AIActivity.isDebugModeEnabled [ReadOnly]
	Added Property boolean AIActivity.isHighestPriority [ReadOnly]
	Added Property number AIActivity.elapsedTime [ReadOnly]
	Added Property string AIActivity.type [ReadOnly]
	Added MemberFunction boolean AIActivity:IsA(string typeName)
Added Class AIActivityHandler
	Added Property boolean AIActivityHandler.isSelectedInDebugger [ReadOnly]
	Added Property string AIActivityHandler.type [ReadOnly]
	Added MemberFunction AIActivity AIActivityHandler:AddActivity(string name, [table  functions]) [RequiresAuthority]
	Added MemberFunction void AIActivityHandler:RemoveActivity(string name) [RequiresAuthority]
	Added MemberFunction void AIActivityHandler:ClearActivities() [RequiresAuthority]
	Added MemberFunction Array<AIActivity> AIActivityHandler:GetActivities() [RequiresAuthority]
	Added MemberFunction AIActivity AIActivityHandler:FindActivity(string name) [RequiresAuthority]
	Added MemberFunction boolean AIActivityHandler:IsA(string typeName)
Changed Class Ability
	Added Property string Ability.actionBinding [ReadOnly]
	Added Property string Ability.actionName [ReadOnly]
	Added Property boolean Ability.canActivateWhileDead [ReadOnly]
	Added Property string Ability.animation [ReadOnly]
	Added Property boolean Ability.canBePrevented [ReadOnly]
	Added Property AbilityPhaseSettings Ability.castPhaseSettings [ReadOnly]
	Added Property AbilityPhaseSettings Ability.executePhaseSettings [ReadOnly]
	Added Property AbilityPhaseSettings Ability.recoveryPhaseSettings [ReadOnly]
	Added Property AbilityPhaseSettings Ability.cooldownPhaseSettings [ReadOnly]
	Added Property boolean Ability.isEnabled [RequiresAuthority]
	Added Property Object Ability.owner [RequiresAuthority]
	Added Event Ability.readyEvent<Ability>
	Added Event Ability.castEvent<Ability>
	Added Event Ability.executeEvent<Ability>
	Added Event Ability.recoveryEvent<Ability>
	Added Event Ability.cooldownEvent<Ability>
	Added Event Ability.interruptedEvent<Ability>
	Added Event Ability.tickEvent<Ability, number>
Changed Class Ability
	Added MemberFunction AbilityPhaseSettings Ability:GetCurrentPhaseSettings()
	Added MemberFunction void Ability:AdvancePhase()
	Added MemberFunction boolean Ability:IsA(string typeName)
Changed Class AbilityPhaseSettings
	Added Property number AbilityPhaseSettings.duration [ReadOnly]
	Added Property boolean AbilityPhaseSettings.canMove [ReadOnly]
	Added Property boolean AbilityPhaseSettings.canJump [ReadOnly]
	Added Property boolean AbilityPhaseSettings.canRotate [ReadOnly]
	Added Property boolean AbilityPhaseSettings.preventsOtherAbilities [ReadOnly]
	Added Property boolean AbilityPhaseSettings.isTargetDataUpdated [ReadOnly]
	Added Property AbilityFacingMode AbilityPhaseSettings.facingMode [ReadOnly]
	Added MemberFunction boolean AbilityPhaseSettings:IsA(string typeName)
Changed Class AbilityTarget
	Added Property Player AbilityTarget.hitPlayer
	Added Property Object AbilityTarget.hitObject
	Added Property number AbilityTarget.spreadHalfAngle
	Added Property integer AbilityTarget.spreadRandomSeed
	Added MemberFunction boolean AbilityTarget:IsA(string typeName)
Changed Class AnimatedMesh
	Added Property string AnimatedMesh.animationStance [ClientOnly]
	Added Property number AnimatedMesh.animationStancePlaybackRate [ClientOnly]
	Added Property boolean AnimatedMesh.animationStanceShouldLoop [ClientOnly]
	Added Property number AnimatedMesh.playbackRateMultiplier [ClientOnly]
	Added Event AnimatedMesh.animationEvent<AnimatedMesh, string, string> [ClientOnly]
Changed Class AnimatedMesh
	Added MemberFunction void AnimatedMesh:SetMeshForSlot(integer slotIndex, string assetId) [ClientOnly]
	Added MemberFunction string AnimatedMesh:GetMeshForSlot(integer slotIndex) [ClientOnly]
	Added MemberFunction void AnimatedMesh:SetMaterialForSlot(string assetId, string slotName) [RequiresAuthority] [Dynamic]
	Added MemberFunction MaterialSlot AnimatedMesh:GetMaterialSlot(string slotName)
	Added MemberFunction Array<MaterialSlot> AnimatedMesh:GetMaterialSlots()
	Added MemberFunction void AnimatedMesh:ResetMaterialSlot(string slotName) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean AnimatedMesh:IsA(string typeName)
Changed Class AreaLight
	Added Property number AreaLight.sourceWidth [RequiresAuthority] [Dynamic]
	Added Property number AreaLight.sourceHeight [RequiresAuthority] [Dynamic]
	Added Property number AreaLight.barnDoorAngle [RequiresAuthority] [Dynamic]
	Added Property number AreaLight.barnDoorLength [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean AreaLight:IsA(string typeName)
Changed Class Audio
	Added Property boolean Audio.isSpatializationEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean Audio.isAttenuationEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean Audio.isOcclusionEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean Audio.isAutoPlayEnabled [ReadOnly]
	Added Property boolean Audio.isTransient [RequiresAuthority] [Dynamic]
	Added Property boolean Audio.isAutoRepeatEnabled [RequiresAuthority] [Dynamic]
	Added Property number Audio.pitch [RequiresAuthority] [Dynamic]
	Added Property number Audio.volume [RequiresAuthority] [Dynamic]
	Added Property number Audio.radius [RequiresAuthority] [Dynamic]
	Added Property number Audio.falloff [RequiresAuthority] [Dynamic]
	Added Property boolean Audio.isPlaying [ReadOnly]
	Added Property number Audio.length [ReadOnly]
	Added Property number Audio.currentPlaybackTime [ReadOnly]
	Added Property number Audio.fadeInTime [RequiresAuthority] [Dynamic]
	Added Property number Audio.fadeOutTime [RequiresAuthority] [Dynamic]
	Added Property number Audio.startTime [RequiresAuthority] [Dynamic]
	Added Property number Audio.stopTime [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Audio:IsA(string typeName)
Added Class BindingSet
	Added Property string BindingSet.type [ReadOnly]
	Added MemberFunction boolean BindingSet:IsA(string typeName)
Changed Class Camera
	Added Property Player Camera.followPlayer [RequiresAuthority] [Dynamic]
	Added Property boolean Camera.isOrthographic [RequiresAuthority] [Dynamic]
	Added Property number Camera.fieldOfView [RequiresAuthority] [Dynamic]
	Added Property number Camera.viewWidth [RequiresAuthority] [Dynamic]
	Added Property boolean Camera.useCameraSocket [RequiresAuthority] [Dynamic]
	Added Property number Camera.currentDistance [ClientOnly]
	Added Property boolean Camera.isDistanceAdjustable [RequiresAuthority] [Dynamic]
	Added Property number Camera.minDistance [RequiresAuthority] [Dynamic]
	Added Property number Camera.maxDistance [RequiresAuthority] [Dynamic]
	Added Property RotationMode Camera.rotationMode [RequiresAuthority] [Dynamic]
	Added Property boolean Camera.hasFreeControl [RequiresAuthority] [Dynamic]
	Added Property number Camera.currentPitch [ClientOnly]
	Added Property number Camera.minPitch [RequiresAuthority] [Dynamic]
	Added Property number Camera.maxPitch [RequiresAuthority] [Dynamic]
	Added Property boolean Camera.isYawLimited [RequiresAuthority] [Dynamic]
	Added Property number Camera.currentYaw [ClientOnly]
	Added Property number Camera.minYaw [RequiresAuthority] [Dynamic]
	Added Property number Camera.maxYaw [RequiresAuthority] [Dynamic]
	Added Property boolean Camera.useAsAudioListener [RequiresAuthority] [Dynamic]
	Added Property Vector3 Camera.audioListenerOffset [RequiresAuthority] [Dynamic]
	Added Property boolean Camera.isUsingCameraRotation [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector3 Camera:GetAudioListenerOffset()
	Added MemberFunction void Camera:SetAudioListenerOffset(Vector3 offset) [RequiresAuthority] [Dynamic]
	Added MemberFunction CameraCapture Camera:Capture(CameraCaptureResolution resolution, [table  optionalParameters]) [ClientOnly]
	Added MemberFunction boolean Camera:IsA(string typeName)
Added Class CameraCapture
	Added Property CameraCaptureResolution CameraCapture.resolution [ReadOnly]
	Added Property Camera CameraCapture.camera
	Added Property string CameraCapture.type [ReadOnly]
	Added MemberFunction boolean CameraCapture:IsValid()
	Added MemberFunction void CameraCapture:Refresh()
	Added MemberFunction void CameraCapture:Release()
	Added MemberFunction boolean CameraCapture:IsA(string typeName)
Changed Class Color
	Added Property number Color.r
	Added Property number Color.g
	Added Property number Color.b
	Added Property number Color.a
	Added MemberFunction boolean Color:IsA(string typeName)
	Added Constructor Color Color.New(Color color)
	Added Constructor Color Color.New(Vector4 rgbaVector)
	Added Constructor Color Color.New(Vector3 rgbVector)
	Added Constructor Color Color.New(number red, number green, number blue, number alpha)
	Added Constructor Color Color.New(number red, number green, number blue)
	Added Constructor Color Color.New()
	Added Constant Color Color.WHITE
	Added Constant Color Color.GRAY
	Added Constant Color Color.BLACK
	Added Constant Color Color.TRANSPARENT
	Added Constant Color Color.RED
	Added Constant Color Color.GREEN
	Added Constant Color Color.BLUE
	Added Constant Color Color.CYAN
	Added Constant Color Color.MAGENTA
	Added Constant Color Color.YELLOW
	Added Constant Color Color.ORANGE
	Added Constant Color Color.PURPLE
	Added Constant Color Color.BROWN
	Added Constant Color Color.PINK
	Added Constant Color Color.TAN
	Added Constant Color Color.RUBY
	Added Constant Color Color.EMERALD
	Added Constant Color Color.SAPPHIRE
	Added Constant Color Color.SILVER
	Added Constant Color Color.SMOKE
Added Class CoreFriendCollection
	Added Property boolean CoreFriendCollection.hasMoreResults [ReadOnly]
	Added Property string CoreFriendCollection.type [ReadOnly]
	Added MemberFunction Array<CoreFriendCollectionEntry> CoreFriendCollection:GetResults()
	Added MemberFunction CoreFriendCollection CoreFriendCollection:GetMoreResults()
	Added MemberFunction boolean CoreFriendCollection:IsA(string typeName)
Added Class CoreFriendCollectionEntry
	Added Property string CoreFriendCollectionEntry.id [ReadOnly]
	Added Property string CoreFriendCollectionEntry.name [ReadOnly]
	Added Property string CoreFriendCollectionEntry.type [ReadOnly]
	Added MemberFunction boolean CoreFriendCollectionEntry:IsA(string typeName)
Added Class CoreGameCollectionEntry
	Added Property string CoreGameCollectionEntry.id [ReadOnly]
	Added Property string CoreGameCollectionEntry.parentGameId [ReadOnly]
	Added Property string CoreGameCollectionEntry.name [ReadOnly]
	Added Property string CoreGameCollectionEntry.ownerId [ReadOnly]
	Added Property string CoreGameCollectionEntry.ownerName [ReadOnly]
	Added Property boolean CoreGameCollectionEntry.isPromoted [ReadOnly]
	Added Property string CoreGameCollectionEntry.type [ReadOnly]
	Added MemberFunction boolean CoreGameCollectionEntry:IsA(string typeName)
Added Class CoreGameEvent
	Added Property string CoreGameEvent.id [ReadOnly]
	Added Property string CoreGameEvent.gameId [ReadOnly]
	Added Property string CoreGameEvent.name [ReadOnly]
	Added Property string CoreGameEvent.referenceName [ReadOnly]
	Added Property string CoreGameEvent.description [ReadOnly]
	Added Property CoreGameEventState CoreGameEvent.state [ReadOnly]
	Added Property integer CoreGameEvent.registeredPlayerCount [ReadOnly]
	Added Property string CoreGameEvent.type [ReadOnly]
	Added MemberFunction Array<string> CoreGameEvent:GetTags()
	Added MemberFunction DateTime CoreGameEvent:GetStartDateTime()
	Added MemberFunction DateTime CoreGameEvent:GetEndDateTime()
	Added MemberFunction boolean CoreGameEvent:IsA(string typeName)
Added Class CoreGameEventCollection
	Added Property boolean CoreGameEventCollection.hasMoreResults [ReadOnly]
	Added Property string CoreGameEventCollection.type [ReadOnly]
	Added MemberFunction Array<CoreGameEvent> CoreGameEventCollection:GetResults()
	Added MemberFunction CoreGameEventCollection CoreGameEventCollection:GetMoreResults()
	Added MemberFunction boolean CoreGameEventCollection:IsA(string typeName)
Added Class CoreGameInfo
	Added Property string CoreGameInfo.id [ReadOnly]
	Added Property string CoreGameInfo.parentGameId [ReadOnly]
	Added Property string CoreGameInfo.name [ReadOnly]
	Added Property string CoreGameInfo.description [ReadOnly]
	Added Property string CoreGameInfo.ownerId [ReadOnly]
	Added Property string CoreGameInfo.ownerName [ReadOnly]
	Added Property integer CoreGameInfo.maxPlayers [ReadOnly]
	Added Property boolean CoreGameInfo.isQueueEnabled [ReadOnly]
	Added Property integer CoreGameInfo.screenshotCount [ReadOnly]
	Added Property boolean CoreGameInfo.hasWorldCapture [ReadOnly]
	Added Property string CoreGameInfo.type [ReadOnly]
	Added MemberFunction Array<string> CoreGameInfo:GetTags()
	Added MemberFunction boolean CoreGameInfo:IsA(string typeName)
Changed Class CoreMesh
	Added Property string CoreMesh.meshAssetId [ReadOnly]
	Added Property integer CoreMesh.team [RequiresAuthority] [Dynamic]
	Added Property boolean CoreMesh.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Added Property boolean CoreMesh.isTeamCollisionEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean CoreMesh.isEnemyCollisionEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean CoreMesh.isCameraCollisionEnabled [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean CoreMesh:IsA(string typeName)
Changed Class CoreObject
	Added Property string CoreObject.name [RequiresAuthority] [Dynamic]
	Added Property string CoreObject.id [ReadOnly]
	Added Property boolean CoreObject.isVisible [RequiresAuthority] [Dynamic]
	Added Property Visibility CoreObject.visibility [RequiresAuthority] [Dynamic]
	Added Property boolean CoreObject.isCollidable [RequiresAuthority] [Dynamic]
	Added Property Collision CoreObject.collision [RequiresAuthority] [Dynamic]
	Added Property Collision CoreObject.cameraCollision [RequiresAuthority] [Dynamic]
	Added Property boolean CoreObject.isEnabled [RequiresAuthority] [Dynamic]
	Added Property number CoreObject.lifeSpan [RequiresAuthority] [Dynamic]
	Added Property boolean CoreObject.isStatic [ReadOnly]
	Added Property boolean CoreObject.isNetworked [ReadOnly]
	Added Property boolean CoreObject.isClientOnly [ReadOnly]
	Added Property boolean CoreObject.isServerOnly [ReadOnly]
	Added Property CoreObject CoreObject.parent [RequiresAuthority] [Dynamic]
	Added Property string CoreObject.sourceTemplateId [ReadOnly]
	Added Event CoreObject.childAddedEvent<CoreObject, CoreObject>
	Added Event CoreObject.childRemovedEvent<CoreObject, CoreObject>
	Added Event CoreObject.descendantAddedEvent<CoreObject, CoreObject>
	Added Event CoreObject.descendantRemovedEvent<CoreObject, CoreObject>
	Added Event CoreObject.destroyEvent<CoreObject>
	Added Event CoreObject.customPropertyChangedEvent<CoreObject, string>
	Added Event CoreObject.networkedPropertyChangedEvent<CoreObject, string>
Changed Class CoreObject
	Added MemberFunction boolean CoreObject:IsVisibleInHierarchy()
	Added MemberFunction boolean CoreObject:IsCollidableInHierarchy()
	Added MemberFunction boolean CoreObject:IsCameraCollidableInHierarchy()
	Added MemberFunction boolean CoreObject:IsEnabledInHierarchy()
	Added MemberFunction boolean CoreObject:IsAncestorOf(CoreObject coreObject)
	Added MemberFunction void CoreObject:MoveTo(Vector3 position, number duration, boolean isLocalPosition) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:MoveContinuous(Vector3 worldVelocity, boolean isLocalVelocity) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateTo(Quaternion rotation, number duration, boolean isLocalRotation) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateTo(Rotation rotation, number duration, boolean isLocalRotation) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Vector3 angularVelocity, boolean isLocalAngularVelocity) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Vector3 angularVelocity) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Quaternion quaternionSpeed, number multiplier, boolean isLocalQuaternionSpeed) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Quaternion quaternionSpeed, number multiplier) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Quaternion quaternionSpeed) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Rotation rotationSpeed, number multiplier, boolean isLocalRotationSpeed) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Rotation rotationSpeed, number multiplier) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:RotateContinuous(Rotation rotationSpeed) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:LookAtContinuous(Player target, boolean isPitchLocked, number speed) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:LookAtContinuous(Player target, boolean isPitchLocked) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:LookAtContinuous(CoreObject target, boolean isPitchLocked, number speed) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:LookAtContinuous(CoreObject target, boolean isPitchLocked) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:LookAtLocalView(boolean isPitchLocked) [RequiresAuthority] [ClientOnly] [Dynamic]
	Added MemberFunction void CoreObject:ScaleTo(Vector3 scale, number duration, boolean isScaleLocal) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:ScaleContinuous(Vector3 scaleRate, boolean isLocalScaleRate) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:ReorderBeforeSiblings() [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:ReorderAfterSiblings() [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:ReorderBefore(CoreObject sibling) [RequiresAuthority] [Dynamic]
	Added MemberFunction void CoreObject:ReorderAfter(CoreObject sibling) [RequiresAuthority] [Dynamic]
	Added MemberFunction value, boolean CoreObject:GetCustomProperty(string propertyName)
	Added MemberFunction boolean CoreObject:SetCustomProperty(string propertyName, value propertyValue) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean CoreObject:SetNetworkedCustomProperty(string propertyName, value propertyValue) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean CoreObject:IsCustomPropertyDynamic(string propertyName)
	Added MemberFunction boolean CoreObject:IsA(string typeName)
Changed Class CoreObjectReference
	Added Property string CoreObjectReference.id [ReadOnly]
	Added Property boolean CoreObjectReference.isAssigned [ReadOnly]
	Added MemberFunction boolean CoreObjectReference:IsA(string typeName)
Added Class CorePlayerProfile
	Added Property string CorePlayerProfile.id [ReadOnly]
	Added Property string CorePlayerProfile.name [ReadOnly]
	Added Property string CorePlayerProfile.description [ReadOnly]
	Added Property string CorePlayerProfile.type [ReadOnly]
	Added MemberFunction boolean CorePlayerProfile:IsA(string typeName)
Added Class CurveKey
	Added Property CurveInterpolation CurveKey.interpolation
	Added Property number CurveKey.time
	Added Property number CurveKey.value
	Added Property number CurveKey.arriveTangent
	Added Property number CurveKey.leaveTangent
	Added Property string CurveKey.type [ReadOnly]
	Added MemberFunction boolean CurveKey:IsA(string typeName)
	Added Constructor CurveKey CurveKey.New(CurveKey other)
	Added Constructor CurveKey CurveKey.New(number time, number value, table optionalParameters)
	Added Constructor CurveKey CurveKey.New(number time, number value)
	Added Constructor CurveKey CurveKey.New()
Added Class CustomMaterial
	Added Property string CustomMaterial.type [ReadOnly]
	Added MemberFunction void CustomMaterial:SetProperty(string propertyName, Vector2 value) [ClientOnly]
	Added MemberFunction void CustomMaterial:SetProperty(string propertyName, boolean value) [ClientOnly]
	Added MemberFunction void CustomMaterial:SetProperty(string propertyName, Vector3 value) [ClientOnly]
	Added MemberFunction void CustomMaterial:SetProperty(string propertyName, Color value) [ClientOnly]
	Added MemberFunction void CustomMaterial:SetProperty(string propertyName, number value) [ClientOnly]
	Added MemberFunction ... CustomMaterial:GetProperty(string propertyName) [ClientOnly]
	Added MemberFunction Array<string> CustomMaterial:GetPropertyNames() [ClientOnly]
	Added MemberFunction string CustomMaterial:GetBaseMaterialId() [ClientOnly]
	Added MemberFunction boolean CustomMaterial:IsA(string typeName)
	Added StaticFunction CustomMaterial CustomMaterial.Find(string assetId) [ClientOnly]
Changed Class Damage
	Added Property number Damage.amount
	Added Property DamageReason Damage.reason
	Added Property Ability Damage.sourceAbility
	Added Property Player Damage.sourcePlayer
	Added MemberFunction boolean Damage:IsA(string typeName)
Added Class DamageableObject
	Added Property number DamageableObject.hitPoints [RequiresAuthority] [Dynamic]
	Added Property number DamageableObject.maxHitPoints [RequiresAuthority] [Dynamic]
	Added Property boolean DamageableObject.isDead [ReadOnly]
	Added Property boolean DamageableObject.isImmortal [RequiresAuthority] [Dynamic]
	Added Property boolean DamageableObject.isInvulnerable [RequiresAuthority] [Dynamic]
	Added Property boolean DamageableObject.destroyOnDeath [ReadOnly]
	Added Property number DamageableObject.destroyOnDeathDelay [ReadOnly]
	Added Property string DamageableObject.destroyOnDeathClientTemplateId [ReadOnly]
	Added Property string DamageableObject.destroyOnDeathNetworkedTemplateId [ReadOnly]
	Added Property string DamageableObject.type [ReadOnly]
	Added Event DamageableObject.damagedEvent<DamageableObject, Damage>
	Added Event DamageableObject.diedEvent<DamageableObject, Damage>
	Added MemberFunction void DamageableObject:ApplyDamage(Damage damage) [RequiresAuthority] [Dynamic]
	Added MemberFunction void DamageableObject:Die(Damage damage) [RequiresAuthority] [Dynamic]
	Added MemberFunction void DamageableObject:Die() [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean DamageableObject:IsA(string typeName)
Added Class DateTime
	Added Property integer DateTime.year [ReadOnly]
	Added Property integer DateTime.month [ReadOnly]
	Added Property integer DateTime.day [ReadOnly]
	Added Property integer DateTime.hour [ReadOnly]
	Added Property integer DateTime.minute [ReadOnly]
	Added Property integer DateTime.second [ReadOnly]
	Added Property integer DateTime.millisecond [ReadOnly]
	Added Property boolean DateTime.isLocal [ReadOnly]
	Added Property integer DateTime.secondsSinceEpoch [ReadOnly]
	Added Property integer DateTime.millisecondsSinceEpoch [ReadOnly]
	Added Property string DateTime.type [ReadOnly]
	Added MemberFunction DateTime DateTime:ToLocalTime()
	Added MemberFunction DateTime DateTime:ToUtcTime()
	Added MemberFunction string DateTime:ToIsoString()
	Added MemberFunction boolean DateTime:IsA(string typeName)
	Added Constructor DateTime DateTime.New([table  timeParameterTable])
	Added StaticFunction DateTime DateTime.CurrentTime([table  optionalParameters])
	Added StaticFunction DateTime DateTime.FromSecondsSinceEpoch(integer timestampInSeconds)
	Added StaticFunction DateTime DateTime.FromMillisecondsSinceEpoch(integer timestampInMs)
	Added StaticFunction DateTime DateTime.FromIsoString(string timeString)
Changed Class Decal
	Added MemberFunction boolean Decal:IsA(string typeName)
Changed Class Equipment
	Added Property Player Equipment.owner [ReadOnly]
	Added Property string Equipment.socket [RequiresAuthority] [Dynamic]
	Added Event Equipment.equippedEvent<Equipment, Player>
	Added Event Equipment.unequippedEvent<Equipment, Player>
Changed Class Equipment
	Added MemberFunction boolean Equipment:IsA(string typeName)
Changed Class Event
	Added MemberFunction boolean Event:IsA(string typeName)
Changed Class EventListener
	Added Property boolean EventListener.isConnected [ReadOnly]
	Added MemberFunction boolean EventListener:IsA(string typeName)
Changed Class Folder
	Added MemberFunction boolean Folder:IsA(string typeName)
Added Class FourWheeledVehicle
	Added Property number FourWheeledVehicle.turnRadius [RequiresAuthority] [Dynamic]
	Added Property string FourWheeledVehicle.type [ReadOnly]
	Added MemberFunction boolean FourWheeledVehicle:IsA(string typeName)
Changed Class HitResult
	Added Property Object HitResult.other [ReadOnly]
	Added Property string HitResult.socketName [ReadOnly]
	Added MemberFunction Vector3 HitResult:GetShapePosition()
	Added MemberFunction MaterialSlot HitResult:GetMaterialSlot()
	Added MemberFunction boolean HitResult:IsA(string typeName)
Changed Class Hook
	Added MemberFunction boolean Hook:IsA(string typeName)
Changed Class HookListener
	Added Property boolean HookListener.isConnected [ReadOnly]
	Added Property integer HookListener.priority
	Added MemberFunction boolean HookListener:IsA(string typeName)
Added Class IKAnchor
	Added Property Player IKAnchor.target [ReadOnly]
	Added Property IKAnchorType IKAnchor.anchorType [ReadOnly]
	Added Property number IKAnchor.blendInTime [RequiresAuthority] [Dynamic]
	Added Property number IKAnchor.blendOutTime [RequiresAuthority] [Dynamic]
	Added Property number IKAnchor.weight [RequiresAuthority] [Dynamic]
	Added Property string IKAnchor.type [ReadOnly]
	Added Event IKAnchor.activatedEvent<IKAnchor, Object>
	Added Event IKAnchor.deactivatedEvent<IKAnchor, Object>
	Added MemberFunction void IKAnchor:Activate(Player target) [RequiresAuthority]
	Added MemberFunction void IKAnchor:Deactivate() [RequiresAuthority]
	Added MemberFunction Vector3 IKAnchor:GetAimOffset()
	Added MemberFunction void IKAnchor:SetAimOffset(Vector3 aimOffset) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean IKAnchor:IsA(string typeName)
Changed Class ImpactData
	Added Property Object ImpactData.targetObject [ReadOnly]
	Added Property Projectile ImpactData.projectile [ReadOnly]
	Added Property Ability ImpactData.sourceAbility [ReadOnly]
	Added Property Weapon ImpactData.weapon [ReadOnly]
	Added Property Player ImpactData.weaponOwner [ReadOnly]
	Added Property boolean ImpactData.isHeadshot [ReadOnly]
	Added Property number ImpactData.travelDistance [ReadOnly]
	Added MemberFunction boolean ImpactData:IsA(string typeName)
Added Class Inventory
	Added Property Player Inventory.owner [ReadOnly]
	Added Property integer Inventory.slotCount [ReadOnly]
	Added Property integer Inventory.emptySlotCount [ReadOnly]
	Added Property integer Inventory.occupiedSlotCount [ReadOnly]
	Added Property string Inventory.type [ReadOnly]
	Added Event Inventory.ownerChangedEvent<Inventory>
	Added Event Inventory.resizedEvent<Inventory>
	Added Event Inventory.changedEvent<Inventory, integer>
	Added Event Inventory.itemPropertyChangedEvent<Inventory, InventoryItem, string>
	Added MemberFunction void Inventory:Assign(Player player) [RequiresAuthority] [Dynamic]
	Added MemberFunction void Inventory:Unassign() [RequiresAuthority] [Dynamic]
	Added MemberFunction InventoryItem Inventory:GetItem(integer slot)
	Added MemberFunction table Inventory:GetItems([table  optionalParameters])
	Added MemberFunction void Inventory:ClearItems() [RequiresAuthority] [Dynamic]
	Added MemberFunction void Inventory:SortItems() [RequiresAuthority] [Dynamic]
	Added MemberFunction void Inventory:ConsolidateItems() [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanResize(integer newSize) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:Resize(integer newSize) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanAddItem(string itemAssetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:AddItem(string itemAssetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanPickUpItem(ItemObject itemObject, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:PickUpItem(ItemObject itemObject, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanMoveFromSlot(integer fromSlot, integer toSlot, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:MoveFromSlot(integer fromSlot, integer toSlot, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanRemoveItem(string itemAssetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:RemoveItem(string itemAssetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanRemoveFromSlot(integer slot, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:RemoveFromSlot(integer slot, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanDropItem(string itemAssetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:DropItem(string itemAssetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanDropFromSlot(integer slot, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:DropFromSlot(integer slot, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanGiveItem(string itemAssetId, Inventory recipient, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:GiveItem(string itemAssetId, Inventory recipient, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:CanGiveFromSlot(integer slot, Inventory recipient, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:GiveFromSlot(integer slot, Inventory recipient, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Inventory:IsA(string typeName)
Added Class InventoryItem
	Added Property string InventoryItem.name [ReadOnly]
	Added Property string InventoryItem.itemAssetId [ReadOnly]
	Added Property string InventoryItem.itemTemplateId [ReadOnly]
	Added Property integer InventoryItem.maximumStackCount [ReadOnly]
	Added Property Inventory InventoryItem.inventory [ReadOnly]
	Added Property integer InventoryItem.slot [ReadOnly]
	Added Property integer InventoryItem.count [RequiresAuthority] [Dynamic]
	Added Property string InventoryItem.type [ReadOnly]
	Added MemberFunction boolean InventoryItem:SetCustomProperty(string propertyName, value propertyValue) [RequiresAuthority] [Dynamic]
	Added MemberFunction value, boolean InventoryItem:GetCustomProperty(string propertyName)
	Added MemberFunction table InventoryItem:GetCustomProperties()
	Added MemberFunction boolean InventoryItem:IsCustomPropertyDynamic(string propertyName )
	Added MemberFunction boolean InventoryItem:IsA(string typeName)
Added Class ItemObject
	Added Property string ItemObject.itemAssetId [ReadOnly]
	Added Property string ItemObject.itemTemplateId [ReadOnly]
	Added Property integer ItemObject.maximumStackCount [ReadOnly]
	Added Property integer ItemObject.count [RequiresAuthority] [Dynamic]
	Added Property string ItemObject.type [ReadOnly]
	Added Event ItemObject.changedEvent<ItemObject>
	Added MemberFunction boolean ItemObject:IsA(string typeName)
Changed Class LeaderboardEntry
	Added Property string LeaderboardEntry.id [ReadOnly]
	Added Property string LeaderboardEntry.name [ReadOnly]
	Added Property number LeaderboardEntry.score [ReadOnly]
	Added Property string LeaderboardEntry.additionalData [ReadOnly]
	Added MemberFunction boolean LeaderboardEntry:IsA(string typeName)
Changed Class Light
	Added Property number Light.intensity [RequiresAuthority] [Dynamic]
	Added Property number Light.attenuationRadius [RequiresAuthority] [Dynamic]
	Added Property boolean Light.isShadowCaster [RequiresAuthority] [Dynamic]
	Added Property boolean Light.hasTemperature [RequiresAuthority] [Dynamic]
	Added Property number Light.temperature [RequiresAuthority] [Dynamic]
	Added Property integer Light.team [RequiresAuthority] [Dynamic]
	Added Property boolean Light.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Light:IsA(string typeName)
Added Class MaterialSlot
	Added Property string MaterialSlot.slotName [ReadOnly]
	Added Property CoreMesh MaterialSlot.mesh [ReadOnly]
	Added Property string MaterialSlot.materialAssetName [ReadOnly]
	Added Property string MaterialSlot.materialAssetId
	Added Property boolean MaterialSlot.isSmartMaterial
	Added Property string MaterialSlot.type [ReadOnly]
	Added MemberFunction void MaterialSlot:SetUVTiling(Vector2 uv)
	Added MemberFunction void MaterialSlot:SetUVTiling(number u, number v)
	Added MemberFunction Vector2 MaterialSlot:GetUVTiling()
	Added MemberFunction void MaterialSlot:SetColor(Color color)
	Added MemberFunction Color MaterialSlot:GetColor()
	Added MemberFunction void MaterialSlot:ResetColor()
	Added MemberFunction void MaterialSlot:ResetUVTiling()
	Added MemberFunction void MaterialSlot:ResetIsSmartMaterial()
	Added MemberFunction void MaterialSlot:ResetMaterialAssetId()
	Added MemberFunction CustomMaterial MaterialSlot:GetCustomMaterial() [ClientOnly]
	Added MemberFunction boolean MaterialSlot:IsA(string typeName)
Changed Class MergedModel
	Added MemberFunction boolean MergedModel:IsA(string typeName)
Changed Class NetReference
	Added Property boolean NetReference.isAssigned [ReadOnly]
	Added Property NetReferenceType NetReference.referenceType [ReadOnly]
	Added MemberFunction boolean NetReference:IsA(string typeName)
Changed Class NetworkContext
	Added MemberFunction CoreObject NetworkContext:SpawnSharedAsset(string assetId, [table  optionalParameters]) [RequiresAuthority] [Dynamic]
	Added MemberFunction void NetworkContext:DestroySharedAsset(CoreObject coreObject) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean NetworkContext:IsA(string typeName)
Changed Class Object
	Added Property table Object.serverUserData [ServerOnly]
	Added Property table Object.clientUserData [ClientOnly]
	Added MemberFunction boolean Object:IsA(string typeName)
	Added StaticFunction boolean Object.IsValid(value object)
Added Class PartyInfo
	Added Property string PartyInfo.id [ReadOnly]
	Added Property string PartyInfo.name [ReadOnly]
	Added Property integer PartyInfo.partySize [ReadOnly]
	Added Property integer PartyInfo.maxPartySize [ReadOnly]
	Added Property string PartyInfo.partyLeaderId [ReadOnly]
	Added Property boolean PartyInfo.isPlayAsParty [ReadOnly]
	Added Property boolean PartyInfo.isPublic [ReadOnly]
	Added Property string PartyInfo.type [ReadOnly]
	Added MemberFunction Array<string> PartyInfo:GetTags()
	Added MemberFunction Array<string> PartyInfo:GetMemberIds()
	Added MemberFunction boolean PartyInfo:IsFull()
	Added MemberFunction boolean PartyInfo:IsA(string typeName)
Added Class PhysicsObject
	Added Property integer PhysicsObject.team [RequiresAuthority] [Dynamic]
	Added Property boolean PhysicsObject.isTeamCollisionEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean PhysicsObject.isEnemyCollisionEnabled [RequiresAuthority] [Dynamic]
	Added Property number PhysicsObject.hitPoints [RequiresAuthority] [Dynamic]
	Added Property number PhysicsObject.maxHitPoints [RequiresAuthority] [Dynamic]
	Added Property boolean PhysicsObject.isDead [ReadOnly]
	Added Property boolean PhysicsObject.isImmortal [RequiresAuthority] [Dynamic]
	Added Property boolean PhysicsObject.isInvulnerable [RequiresAuthority] [Dynamic]
	Added Property boolean PhysicsObject.destroyOnDeath [ReadOnly]
	Added Property number PhysicsObject.destroyOnDeathDelay [ReadOnly]
	Added Property string PhysicsObject.destroyOnDeathClientTemplateId [ReadOnly]
	Added Property string PhysicsObject.destroyOnDeathNetworkedTemplateId [ReadOnly]
	Added Property string PhysicsObject.type [ReadOnly]
	Added Event PhysicsObject.damagedEvent<PhysicsObject, Damage>
	Added Event PhysicsObject.diedEvent<PhysicsObject, Damage>
	Added Event PhysicsObject.collidedEvent<PhysicsObject, HitResult>
	Added MemberFunction void PhysicsObject:ApplyDamage(Damage damage) [RequiresAuthority] [Dynamic]
	Added MemberFunction void PhysicsObject:Die(Damage damage) [RequiresAuthority] [Dynamic]
	Added MemberFunction void PhysicsObject:Die() [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean PhysicsObject:IsA(string typeName)
Changed Class Player
	Added Property string Player.id [ReadOnly]
	Added Property string Player.name [ServerOnly]
	Added Property integer Player.team [ServerOnly]
	Added Property boolean Player.isInParty [ReadOnly]
	Added Property boolean Player.isPartyLeader [ReadOnly]
	Added Property number Player.hitPoints [ServerOnly]
	Added Property number Player.maxHitPoints [ServerOnly]
	Added Property integer Player.kills [ServerOnly]
	Added Property integer Player.deaths [ServerOnly]
	Added Property boolean Player.isSpawned [ReadOnly]
	Added Property boolean Player.isDead [ReadOnly]
	Added Property number Player.mass [ReadOnly]
	Added Property boolean Player.isAccelerating [ReadOnly]
	Added Property boolean Player.isCrouching [ReadOnly]
	Added Property boolean Player.isFlying [ReadOnly]
	Added Property boolean Player.isGrounded [ReadOnly]
	Added Property boolean Player.isJumping [ReadOnly]
	Added Property boolean Player.isMounted [ReadOnly]
	Added Property boolean Player.isSwimming [ReadOnly]
	Added Property boolean Player.isWalking [ReadOnly]
	Added Property number Player.maxWalkSpeed [ServerOnly]
	Added Property number Player.stepHeight [ServerOnly]
	Added Property number Player.maxAcceleration [ServerOnly]
	Added Property number Player.brakingDecelerationFalling [ServerOnly]
	Added Property number Player.brakingDecelerationWalking [ServerOnly]
	Added Property number Player.brakingDecelerationFlying [ServerOnly]
	Added Property number Player.groundFriction [ServerOnly]
	Added Property number Player.brakingFrictionFactor [ServerOnly]
	Added Property number Player.walkableFloorAngle [ServerOnly]
	Added Property number Player.lookSensitivity [ClientOnly]
	Added Property string Player.animationStance [ServerOnly]
	Added Property string Player.activeEmote [ReadOnly]
	Added Property FacingMode Player.currentFacingMode [ReadOnly]
	Added Property FacingMode Player.desiredFacingMode [ServerOnly]
	Added Property integer Player.maxJumpCount [ServerOnly]
	Added Property boolean Player.shouldFlipOnMultiJump [ServerOnly]
	Added Property number Player.jumpVelocity [ServerOnly]
	Added Property number Player.gravityScale [ServerOnly]
	Added Property number Player.maxSwimSpeed [ServerOnly]
	Added Property number Player.maxFlySpeed [ServerOnly]
	Added Property number Player.touchForceFactor [ServerOnly]
	Added Property boolean Player.isCrouchEnabled [ServerOnly]
	Added Property number Player.buoyancy [ServerOnly]
	Added Property boolean Player.isVisible [ServerOnly]
	Added Property boolean Player.isVisibleToSelf [ClientOnly]
	Added Property number Player.spreadModifier
	Added Property number Player.currentSpread [ReadOnly] [ClientOnly]
	Added Property boolean Player.canMount [ServerOnly]
	Added Property boolean Player.shouldDismountWhenDamaged [ServerOnly]
	Added Property MovementControlMode Player.movementControlMode [ServerOnly]
	Added Property LookControlMode Player.lookControlMode [ServerOnly]
	Added Property boolean Player.isMovementEnabled [ServerOnly]
	Added Property boolean Player.isCollidable [ServerOnly]
	Added Property CoreObject Player.parentCoreObject [ReadOnly]
	Added Property SpawnMode Player.spawnMode [ServerOnly]
	Added Property RespawnMode Player.respawnMode [ServerOnly]
	Added Property number Player.respawnDelay [ServerOnly]
	Added Property number Player.respawnTimeRemaining [ReadOnly] [ServerOnly]
	Added Property Vehicle Player.occupiedVehicle [ReadOnly]
	Added Property number Player.currentRotationRate [ReadOnly]
	Added Property number Player.defaultRotationRate [ServerOnly]
	Added Event Player.collidedEvent<Player, HitResult>
	Added Event Player.damagedEvent<Player, Damage>
	Added Event Player.diedEvent<Player, Damage>
	Added Event Player.spawnedEvent<Player, PlayerStart, string>
	Added Event Player.respawnedEvent<Player>
	Added Event Player.bindingPressedEvent<Player, string>
	Added Event Player.bindingReleasedEvent<Player, string>
	Added Event Player.resourceChangedEvent<Player, string, integer>
	Added Event Player.movementModeChangedEvent<Player, MovementMode, MovementMode>
	Added Event Player.animationEvent<Player, string, string> [ClientOnly]
	Added Event Player.emoteStartedEvent<Player, string>
	Added Event Player.emoteStoppedEvent<Player, string>
	Added Event Player.perkChangedEvent<Player, NetReference>
	Added Event Player.interactableFocusedEvent<Player, Trigger> [ClientOnly]
	Added Event Player.interactableUnfocusedEvent<Player, Trigger> [ClientOnly]
	Added Event Player.privateNetworkedDataChangedEvent<Player, string>
Changed Class Player
	Added MemberFunction PartyInfo Player:GetPartyInfo()
	Added MemberFunction boolean Player:IsInPartyWith(Player player)
	Added MemberFunction Array<Inventory> Player:GetInventories()
	Added MemberFunction Array<IKAnchor> Player:GetIKAnchors()
	Added MemberFunction void Player:SetVisibility(boolean isVisible, boolean includeAttachments) [ServerOnly]
	Added MemberFunction void Player:SetVisibility(boolean isVisible) [ServerOnly]
	Added MemberFunction boolean Player:GetVisibility()
	Added MemberFunction void Player:Spawn(table optionalParameters) [ServerOnly]
	Added MemberFunction void Player:Spawn() [ServerOnly]
	Added MemberFunction void Player:Respawn(Vector3 position, Rotation rotation) [ServerOnly]
	Added MemberFunction void Player:Despawn() [ServerOnly]
	Added MemberFunction void Player:TransferToGame(CoreGameCollectionEntry gameCollectionEntry)
	Added MemberFunction void Player:TransferToGame(CoreGameInfo gameInfo)
	Added MemberFunction void Player:TransferToGame(string gameId)
	Added MemberFunction void Player:TransferToScene(string sceneName, [table  optionalParams]) [ServerOnly]
	Added MemberFunction boolean Player:HasPerk(NetReference perkReference)
	Added MemberFunction void Player:GrantRewardPoints(integer rewardPoints, string activityName) [ServerOnly]
	Added MemberFunction void Player:SetMounted(boolean isMounted) [ServerOnly]
	Added MemberFunction Ability Player:GetActiveAbility()
	Added MemberFunction boolean Player:IsBindingPressed(string bindingName)
	Added MemberFunction void Player:AttachToCoreObject(CoreObject object) [ServerOnly]
	Added MemberFunction void Player:Detach() [ServerOnly]
	Added MemberFunction PlayerTransferData Player:GetJoinTransferData()
	Added MemberFunction PlayerTransferData Player:GetLeaveTransferData()
	Added MemberFunction PrivateNetworkedDataResultCode Player:SetPrivateNetworkedData(string key, value value) [ServerOnly]
	Added MemberFunction value Player:GetPrivateNetworkedData(string key)
	Added MemberFunction table Player:GetPrivateNetworkedDataKeys()
	Added MemberFunction integer Player:GetPrivateNetworkedDataSize()
	Added MemberFunction Trigger Player:GetInteractableTarget() [ClientOnly]
	Added MemberFunction boolean Player:IsA(string typeName)
Changed Class PlayerSettings
	Added MemberFunction boolean PlayerSettings:IsA(string typeName)
Changed Class PlayerStart
	Added Property integer PlayerStart.team [ServerOnly] [Dynamic]
	Added Property number PlayerStart.playerScaleMultiplier [ServerOnly] [Dynamic]
	Added Property string PlayerStart.spawnTemplateId [ReadOnly]
	Added Property string PlayerStart.key [ServerOnly]
	Added Property boolean PlayerStart.shouldDecrowdPlayers [ServerOnly]
	Added MemberFunction boolean PlayerStart:IsA(string typeName)
Added Class PlayerTransferData
	Added Property PlayerTransferReason PlayerTransferData.reason [ReadOnly]
	Added Property string PlayerTransferData.gameId [ReadOnly]
	Added Property string PlayerTransferData.sceneId [ReadOnly]
	Added Property string PlayerTransferData.sceneName [ReadOnly]
	Added Property string PlayerTransferData.type [ReadOnly]
	Added MemberFunction boolean PlayerTransferData:IsA(string typeName)
Changed Class PointLight
	Added Property boolean PointLight.hasNaturalFalloff [RequiresAuthority] [Dynamic]
	Added Property number PointLight.falloffExponent [RequiresAuthority] [Dynamic]
	Added Property number PointLight.sourceRadius [RequiresAuthority] [Dynamic]
	Added Property number PointLight.sourceLength [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean PointLight:IsA(string typeName)
Changed Class Projectile
	Added Property Ability Projectile.sourceAbility [RequiresAuthority]
	Added Property boolean Projectile.shouldBounceOnPlayers [RequiresAuthority]
	Added Property boolean Projectile.shouldDieOnImpact [RequiresAuthority]
	Added Property Player Projectile.owner [RequiresAuthority]
	Added Property number Projectile.speed [RequiresAuthority]
	Added Property number Projectile.maxSpeed [RequiresAuthority]
	Added Property number Projectile.gravityScale [RequiresAuthority]
	Added Property number Projectile.drag [RequiresAuthority]
	Added Property integer Projectile.bouncesRemaining [RequiresAuthority]
	Added Property number Projectile.bounciness [RequiresAuthority]
	Added Property integer Projectile.piercesRemaining [RequiresAuthority]
	Added Property number Projectile.lifeSpan [RequiresAuthority]
	Added Property number Projectile.capsuleRadius [RequiresAuthority]
	Added Property number Projectile.capsuleLength [RequiresAuthority]
	Added Property Object Projectile.homingTarget [RequiresAuthority]
	Added Property number Projectile.homingAcceleration [RequiresAuthority]
	Added Event Projectile.impactEvent<Projectile, Object, HitResult>
	Added Event Projectile.lifeSpanEndedEvent<Projectile>
	Added Event Projectile.homingFailedEvent<Projectile>
Changed Class Projectile
	Added MemberFunction boolean Projectile:IsA(string typeName)
Changed Class Quaternion
	Added Property number Quaternion.x
	Added Property number Quaternion.y
	Added Property number Quaternion.z
	Added Property number Quaternion.w
	Added MemberFunction boolean Quaternion:IsA(string typeName)
	Added Constructor Quaternion Quaternion.New(Quaternion quaternion)
	Added Constructor Quaternion Quaternion.New(Vector3 fromDirection, Vector3 toDirection)
	Added Constructor Quaternion Quaternion.New(Vector3 axis, number angle)
	Added Constructor Quaternion Quaternion.New(Rotation rotation)
	Added Constructor Quaternion Quaternion.New(number x, number y, number z, number w)
	Added Constructor Quaternion Quaternion.New()
	Added Constant Quaternion Quaternion.IDENTITY
Changed Class RandomStream
	Added Property integer RandomStream.seed
	Added MemberFunction boolean RandomStream:IsA(string typeName)
Added Class Rectangle
	Added Property number Rectangle.left
	Added Property number Rectangle.top
	Added Property number Rectangle.right
	Added Property number Rectangle.bottom
	Added Property string Rectangle.type [ReadOnly]
	Added MemberFunction Vector2 Rectangle:GetSize()
	Added MemberFunction Vector2 Rectangle:GetCenter()
	Added MemberFunction boolean Rectangle:IsA(string typeName)
	Added Constructor Rectangle Rectangle.New(Vector4 Vector)
	Added Constructor Rectangle Rectangle.New(Rectangle Rectangle)
	Added Constructor Rectangle Rectangle.New(number Left, number Top, number Right, number Bottom)
	Added Constructor Rectangle Rectangle.New()
Changed Class Rotation
	Added Property number Rotation.x
	Added Property number Rotation.y
	Added Property number Rotation.z
	Added MemberFunction boolean Rotation:IsA(string typeName)
	Added Constructor Rotation Rotation.New(Vector3 forwardVector, Vector3 upVector)
	Added Constructor Rotation Rotation.New(Rotation rotation)
	Added Constructor Rotation Rotation.New(Quaternion quaternion)
	Added Constructor Rotation Rotation.New(number x, number y, number z)
	Added Constructor Rotation Rotation.New()
	Added Constant Rotation Rotation.ZERO
Changed Class Script
	Added Property table Script.context [ReadOnly]
	Added Property string Script.scriptAssetId [ReadOnly]
	Added MemberFunction boolean Script:IsA(string typeName)
Changed Class ScriptAsset
	Added Property string ScriptAsset.name [ReadOnly]
	Added Property string ScriptAsset.id [ReadOnly]
	Added MemberFunction value, boolean ScriptAsset:GetCustomProperty(string propertyName)
	Added MemberFunction boolean ScriptAsset:IsA(string typeName)
Added Class SimpleCurve
	Added Property CurveExtrapolation SimpleCurve.preExtrapolation
	Added Property CurveExtrapolation SimpleCurve.postExtrapolation
	Added Property number SimpleCurve.defaultValue
	Added Property number SimpleCurve.minTime [ReadOnly]
	Added Property number SimpleCurve.maxTime [ReadOnly]
	Added Property number SimpleCurve.minValue [ReadOnly]
	Added Property number SimpleCurve.maxValue [ReadOnly]
	Added Property string SimpleCurve.type [ReadOnly]
	Added MemberFunction number SimpleCurve:GetValue(number time)
	Added MemberFunction number SimpleCurve:GetSlope(number time)
	Added MemberFunction boolean SimpleCurve:IsA(string typeName)
	Added Constructor SimpleCurve SimpleCurve.New(table keys, table optionalParameters)
	Added Constructor SimpleCurve SimpleCurve.New(table keys)
	Added Constructor SimpleCurve SimpleCurve.New(SimpleCurve other)
Changed Class SmartAudio
	Added Property boolean SmartAudio.isSpatializationEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean SmartAudio.isAttenuationEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean SmartAudio.isOcclusionEnabled [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.fadeInTime [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.fadeOutTime [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.startTime [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.stopTime [RequiresAuthority] [Dynamic]
	Added Property boolean SmartAudio.isAutoPlayEnabled [ReadOnly]
	Added Property boolean SmartAudio.isTransient [RequiresAuthority] [Dynamic]
	Added Property boolean SmartAudio.isAutoRepeatEnabled [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.pitch [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.volume [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.radius [RequiresAuthority] [Dynamic]
	Added Property number SmartAudio.falloff [RequiresAuthority] [Dynamic]
	Added Property boolean SmartAudio.isPlaying [ReadOnly]
	Added MemberFunction void SmartAudio:FadeIn(number time) [RequiresAuthority] [Dynamic]
	Added MemberFunction void SmartAudio:FadeOut(number time) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean SmartAudio:IsA(string typeName)
Changed Class SmartObject
	Added Property integer SmartObject.team [RequiresAuthority] [Dynamic]
	Added Property boolean SmartObject.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Added MemberFunction value, boolean SmartObject:GetSmartProperty(string propertyName)
	Added MemberFunction boolean SmartObject:SetSmartProperty(string propertyName, value propertyValue) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean SmartObject:IsA(string typeName)
Changed Class SpotLight
	Added Property boolean SpotLight.hasNaturalFalloff [RequiresAuthority] [Dynamic]
	Added Property number SpotLight.falloffExponent [RequiresAuthority] [Dynamic]
	Added Property number SpotLight.sourceRadius [RequiresAuthority] [Dynamic]
	Added Property number SpotLight.sourceLength [RequiresAuthority] [Dynamic]
	Added Property number SpotLight.innerConeAngle [RequiresAuthority] [Dynamic]
	Added Property number SpotLight.outerConeAngle [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean SpotLight:IsA(string typeName)
Changed Class StaticMesh
	Added Property boolean StaticMesh.isSimulatingDebrisPhysics [RequiresAuthority] [Dynamic]
	Added MemberFunction void StaticMesh:SetMaterialForSlot(string assetId, string slotName) [RequiresAuthority] [Dynamic]
	Added MemberFunction MaterialSlot StaticMesh:GetMaterialSlot(string slotName)
	Added MemberFunction Array<MaterialSlot> StaticMesh:GetMaterialSlots()
	Added MemberFunction void StaticMesh:ResetMaterialSlot(string slotName) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean StaticMesh:IsA(string typeName)
Changed Class Task
	Added Property number Task.repeatInterval
	Added Property integer Task.repeatCount
	Added Property integer Task.id [ReadOnly]
	Added MemberFunction boolean Task:IsA(string typeName)
Changed Class Terrain
	Added MemberFunction boolean Terrain:IsA(string typeName)
Changed Class Transform
	Added MemberFunction boolean Transform:IsA(string typeName)
	Added Constructor Transform Transform.New(Transform transform)
	Added Constructor Transform Transform.New(Vector3 xAxis, Vector3 yAxis, Vector3 zAxis, Vector3 position)
	Added Constructor Transform Transform.New(Rotation rotation, Vector3 position, Vector3 scale)
	Added Constructor Transform Transform.New(Quaternion rotation, Vector3 position, Vector3 scale)
	Added Constructor Transform Transform.New()
	Added Constant Transform Transform.IDENTITY
Added Class TreadedVehicle
	Added Property number TreadedVehicle.turnSpeed [RequiresAuthority] [Dynamic]
	Added Property string TreadedVehicle.type [ReadOnly]
	Added MemberFunction boolean TreadedVehicle:IsA(string typeName)
Changed Class Trigger
	Added Property boolean Trigger.isInteractable [RequiresAuthority] [Dynamic]
	Added Property string Trigger.interactionLabel [RequiresAuthority] [Dynamic]
	Added Property integer Trigger.team [RequiresAuthority] [Dynamic]
	Added Property boolean Trigger.isTeamCollisionEnabled [RequiresAuthority] [Dynamic]
	Added Property boolean Trigger.isEnemyCollisionEnabled [RequiresAuthority] [Dynamic]
	Added Event Trigger.beginOverlapEvent<Trigger, Object>
	Added Event Trigger.endOverlapEvent<Trigger, Object>
	Added Event Trigger.interactedEvent<Trigger, Player>
	Added Event Trigger.interactableFocusedEvent<Trigger, Object>
	Added Event Trigger.interactableUnfocusedEvent<Trigger, Object>
Changed Class Trigger
	Added MemberFunction boolean Trigger:IsOverlapping(Object OtherObject)
	Added MemberFunction boolean Trigger:IsA(string typeName)
Changed Class UIButton
	Added Property string UIButton.text [RequiresAuthority] [Dynamic]
	Added Property integer UIButton.fontSize [RequiresAuthority] [Dynamic]
	Added Property boolean UIButton.isInteractable [RequiresAuthority] [Dynamic]
	Added Property boolean UIButton.shouldClipToSize [RequiresAuthority] [Dynamic]
	Added Property boolean UIButton.shouldScaleToFit [RequiresAuthority] [Dynamic]
	Added Property string UIButton.boundAction [RequiresAuthority] [Dynamic]
	Added Property boolean UIButton.isHittable [RequiresAuthority] [Dynamic]
	Added Event UIButton.clickedEvent<UIButton>
	Added Event UIButton.pressedEvent<UIButton>
	Added Event UIButton.releasedEvent<UIButton>
	Added Event UIButton.hoveredEvent<UIButton>
	Added Event UIButton.unhoveredEvent<UIButton>
Changed Class UIButton
	Added MemberFunction void UIButton:SetFont(string font) [RequiresAuthority] [Dynamic]
	Added MemberFunction Color UIButton:GetShadowColor()
	Added MemberFunction void UIButton:SetShadowColor(Color color) [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector2 UIButton:GetShadowOffset()
	Added MemberFunction void UIButton:SetShadowOffset(Vector2 vector2) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean UIButton:IsA(string typeName)
Changed Class UIContainer
	Added Property number UIContainer.opacity [RequiresAuthority] [Dynamic]
	Added Property number UIContainer.cylinderArcAngle [RequiresAuthority] [Dynamic]
	Added Property boolean UIContainer.useSafeArea [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector2 UIContainer:GetCanvasSize()
	Added MemberFunction void UIContainer:SetCanvasSize(Vector2 size) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean UIContainer:IsCanvasReady() [ClientOnly]
	Added MemberFunction boolean UIContainer:IsA(string typeName)
Changed Class UIControl
	Added Property number UIControl.x [RequiresAuthority] [Dynamic]
	Added Property number UIControl.y [RequiresAuthority] [Dynamic]
	Added Property integer UIControl.width [RequiresAuthority] [Dynamic]
	Added Property integer UIControl.height [RequiresAuthority] [Dynamic]
	Added Property number UIControl.rotationAngle [RequiresAuthority] [Dynamic]
	Added Property UIPivot UIControl.anchor [RequiresAuthority] [Dynamic]
	Added Property UIPivot UIControl.dock [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector2 UIControl:GetAbsolutePosition() [ClientOnly]
	Added MemberFunction void UIControl:SetAbsolutePosition(Vector2 position) [RequiresAuthority] [ClientOnly] [Dynamic]
	Added MemberFunction number UIControl:GetAbsoluteRotation() [ClientOnly]
	Added MemberFunction void UIControl:SetAbsoluteRotation(number rotation) [RequiresAuthority] [ClientOnly] [Dynamic]
	Added MemberFunction boolean UIControl:IsA(string typeName)
Added Class UIEventRSVPButton
	Added Property boolean UIEventRSVPButton.isInteractable [RequiresAuthority] [Dynamic]
	Added Property string UIEventRSVPButton.eventId [RequiresAuthority] [Dynamic]
	Added Property boolean UIEventRSVPButton.isHittable [RequiresAuthority] [Dynamic]
	Added Property string UIEventRSVPButton.type [ReadOnly]
	Added Event UIEventRSVPButton.clickedEvent<UIEventRSVPButton>
	Added Event UIEventRSVPButton.pressedEvent<UIEventRSVPButton>
	Added Event UIEventRSVPButton.releasedEvent<UIEventRSVPButton>
	Added Event UIEventRSVPButton.hoveredEvent<UIEventRSVPButton>
	Added Event UIEventRSVPButton.unhoveredEvent<UIEventRSVPButton>
	Added MemberFunction boolean UIEventRSVPButton:IsA(string typeName)
Changed Class UIImage
	Added Property boolean UIImage.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Added Property integer UIImage.team [RequiresAuthority] [Dynamic]
	Added Property boolean UIImage.shouldClipToSize [RequiresAuthority] [Dynamic]
	Added Property boolean UIImage.isFlippedHorizontal [RequiresAuthority] [Dynamic]
	Added Property boolean UIImage.isFlippedVertical [RequiresAuthority] [Dynamic]
	Added Property boolean UIImage.isHittable [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetImage(Player player) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetImage(string imageId) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetPlayerProfile(Player player) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetPlayerProfile(string playerId) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetPlayerProfile(CoreFriendCollectionEntry friend) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetPlayerProfile(CorePlayerProfile playerProfile) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetGameScreenshot(string gameId, [integer  screenshotIndex]) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetGameEvent(CoreGameEvent gameEvent) [RequiresAuthority] [Dynamic]
	Added MemberFunction string UIImage:GetImage()
	Added MemberFunction Color UIImage:GetShadowColor()
	Added MemberFunction void UIImage:SetShadowColor(Color color) [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector2 UIImage:GetShadowOffset()
	Added MemberFunction void UIImage:SetShadowOffset(Vector2 vector2) [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIImage:SetCameraCapture(CameraCapture cameraCapture) [RequiresAuthority] [ClientOnly]
	Added MemberFunction boolean UIImage:IsA(string typeName)
Changed Class UIPanel
	Added Property integer UIPanel.shouldClipChildren [RequiresAuthority] [Dynamic]
	Added Property number UIPanel.opacity [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean UIPanel:IsA(string typeName)
Changed Class UIPerkPurchaseButton
	Added Property boolean UIPerkPurchaseButton.isInteractable [RequiresAuthority] [Dynamic]
	Added Property boolean UIPerkPurchaseButton.isHittable [RequiresAuthority] [Dynamic]
	Added Event UIPerkPurchaseButton.clickedEvent<UIPerkPurchaseButton>
	Added Event UIPerkPurchaseButton.pressedEvent<UIPerkPurchaseButton>
	Added Event UIPerkPurchaseButton.releasedEvent<UIPerkPurchaseButton>
	Added Event UIPerkPurchaseButton.hoveredEvent<UIPerkPurchaseButton>
	Added Event UIPerkPurchaseButton.unhoveredEvent<UIPerkPurchaseButton>
Changed Class UIPerkPurchaseButton
	Added MemberFunction boolean UIPerkPurchaseButton:IsA(string typeName)
Changed Class UIProgressBar
	Added Property number UIProgressBar.progress [RequiresAuthority] [Dynamic]
	Added Property ProgressBarFillType UIProgressBar.fillType [RequiresAuthority] [Dynamic]
	Added Property ImageTileType UIProgressBar.fillTileType [RequiresAuthority] [Dynamic]
	Added Property ImageTileType UIProgressBar.backgroundTileType [RequiresAuthority] [Dynamic]
	Added Property boolean UIProgressBar.isHittable [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIProgressBar:SetFillImage(string imageId) [RequiresAuthority] [Dynamic]
	Added MemberFunction string UIProgressBar:GetFillImage()
	Added MemberFunction void UIProgressBar:SetBackgroundImage(string imageId) [RequiresAuthority] [Dynamic]
	Added MemberFunction string UIProgressBar:GetBackgroundImage()
	Added MemberFunction boolean UIProgressBar:IsA(string typeName)
Added Class UIRewardPointsMeter
	Added Property boolean UIRewardPointsMeter.isHittable [RequiresAuthority] [Dynamic]
	Added Property string UIRewardPointsMeter.type [ReadOnly]
	Added MemberFunction boolean UIRewardPointsMeter:IsA(string typeName)
Changed Class UIScrollPanel
	Added Property Orientation UIScrollPanel.orientation [RequiresAuthority] [Dynamic]
	Added Property number UIScrollPanel.scrollPosition [RequiresAuthority] [Dynamic]
	Added Property number UIScrollPanel.contentLength [ReadOnly]
	Added Property boolean UIScrollPanel.isInteractable [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean UIScrollPanel:IsA(string typeName)
Changed Class UIText
	Added Property string UIText.text [RequiresAuthority] [Dynamic]
	Added Property integer UIText.fontSize [RequiresAuthority] [Dynamic]
	Added Property integer UIText.outlineSize [RequiresAuthority] [Dynamic]
	Added Property TextJustify UIText.justification [RequiresAuthority] [Dynamic]
	Added Property boolean UIText.shouldWrapText [RequiresAuthority] [Dynamic]
	Added Property boolean UIText.shouldClipText [RequiresAuthority] [Dynamic]
	Added Property boolean UIText.shouldScaleToFit [RequiresAuthority] [Dynamic]
	Added Property boolean UIText.isHittable [RequiresAuthority] [Dynamic]
	Added MemberFunction void UIText:SetFont(string font) [RequiresAuthority] [Dynamic]
	Added MemberFunction Color UIText:GetShadowColor()
	Added MemberFunction void UIText:SetShadowColor(Color color) [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector2 UIText:GetShadowOffset()
	Added MemberFunction void UIText:SetShadowOffset(Vector2 vector2) [RequiresAuthority] [Dynamic]
	Added MemberFunction Color UIText:GetOutlineColor()
	Added MemberFunction void UIText:SetOutlineColor(Color color) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean UIText:IsA(string typeName)
Changed Class Vector2
	Added Property number Vector2.x
	Added Property number Vector2.y
	Added Property number Vector2.size [ReadOnly]
	Added Property number Vector2.sizeSquared [ReadOnly]
	Added MemberFunction Vector2 Vector2:GetAbs()
	Added MemberFunction boolean Vector2:IsA(string typeName)
	Added Constructor Vector2 Vector2.New(number xy)
	Added Constructor Vector2 Vector2.New(Vector3 vector)
	Added Constructor Vector2 Vector2.New(Vector2 vector)
	Added Constructor Vector2 Vector2.New(number x, number y)
	Added Constructor Vector2 Vector2.New()
	Added Constant Vector2 Vector2.ZERO
	Added Constant Vector2 Vector2.ONE
Changed Class Vector3
	Added Property number Vector3.x
	Added Property number Vector3.y
	Added Property number Vector3.z
	Added Property number Vector3.size [ReadOnly]
	Added Property number Vector3.sizeSquared [ReadOnly]
	Added MemberFunction Vector3 Vector3:GetAbs()
	Added MemberFunction boolean Vector3:IsA(string typeName)
	Added Constructor Vector3 Vector3.New(number xyz)
	Added Constructor Vector3 Vector3.New(Vector4 vector)
	Added Constructor Vector3 Vector3.New(Vector3 vector)
	Added Constructor Vector3 Vector3.New(Vector2 xy, number z)
	Added Constructor Vector3 Vector3.New(number x, number y, number z)
	Added Constructor Vector3 Vector3.New()
	Added Constant Vector3 Vector3.ZERO
	Added Constant Vector3 Vector3.ONE
	Added Constant Vector3 Vector3.FORWARD
	Added Constant Vector3 Vector3.UP
	Added Constant Vector3 Vector3.RIGHT
Changed Class Vector4
	Added Property number Vector4.x
	Added Property number Vector4.y
	Added Property number Vector4.z
	Added Property number Vector4.w
	Added Property number Vector4.size [ReadOnly]
	Added Property number Vector4.sizeSquared [ReadOnly]
	Added MemberFunction Vector4 Vector4:GetAbs()
	Added MemberFunction boolean Vector4:IsA(string typeName)
	Added Constructor Vector4 Vector4.New(Vector2 xy, Vector2 zw)
	Added Constructor Vector4 Vector4.New(Color color)
	Added Constructor Vector4 Vector4.New(number xyzw)
	Added Constructor Vector4 Vector4.New(Vector3 xyz, number w)
	Added Constructor Vector4 Vector4.New(Vector4 vector)
	Added Constructor Vector4 Vector4.New(number x, number y, number z, number w)
	Added Constructor Vector4 Vector4.New()
	Added Constant Vector4 Vector4.ZERO
	Added Constant Vector4 Vector4.ONE
Added Class Vehicle
	Added Property boolean Vehicle.canExit [ReadOnly]
	Added Property boolean Vehicle.isAccelerating [ReadOnly]
	Added Property Player Vehicle.driver [ReadOnly]
	Added Property number Vehicle.mass [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.maxSpeed [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.accelerationRate [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.brakeStrength [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.coastBrakeStrength [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.tireFriction [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.gravityScale [RequiresAuthority] [Dynamic]
	Added Property boolean Vehicle.isDriverHidden [ReadOnly]
	Added Property boolean Vehicle.isDriverAttached [ReadOnly]
	Added Property boolean Vehicle.isBrakeEngaged [ReadOnly]
	Added Property boolean Vehicle.isHandbrakeEngaged [ReadOnly]
	Added Property string Vehicle.driverAnimationStance [ReadOnly]
	Added Property Trigger Vehicle.enterTrigger [ReadOnly]
	Added Property Camera Vehicle.camera [ReadOnly]
	Added Property number Vehicle.hitPoints [RequiresAuthority] [Dynamic]
	Added Property number Vehicle.maxHitPoints [RequiresAuthority] [Dynamic]
	Added Property boolean Vehicle.isDead [ReadOnly]
	Added Property boolean Vehicle.isImmortal [RequiresAuthority] [Dynamic]
	Added Property boolean Vehicle.isInvulnerable [RequiresAuthority] [Dynamic]
	Added Property boolean Vehicle.destroyOnDeath [ReadOnly]
	Added Property number Vehicle.destroyOnDeathDelay [ReadOnly]
	Added Property string Vehicle.destroyOnDeathClientTemplateId [ReadOnly]
	Added Property string Vehicle.destroyOnDeathNetworkedTemplateId [ReadOnly]
	Added Property string Vehicle.type [ReadOnly]
	Added Event Vehicle.driverEnteredEvent<Vehicle, Player>
	Added Event Vehicle.driverExitedEvent<Vehicle, Player>
	Added Event Vehicle.damagedEvent<Vehicle, Damage>
	Added Event Vehicle.diedEvent<Vehicle, Damage>
	Added MemberFunction Vector3 Vehicle:GetPhysicsBodyOffset()
	Added MemberFunction Vector3 Vehicle:GetPhysicsBodyScale()
	Added MemberFunction void Vehicle:SetDriver(Player driver) [RequiresAuthority] [Dynamic]
	Added MemberFunction void Vehicle:RemoveDriver() [RequiresAuthority] [Dynamic]
	Added MemberFunction void Vehicle:AddImpulse(Vector3 impulse) [RequiresAuthority] [Dynamic]
	Added MemberFunction Vector3 Vehicle:GetDriverPosition()
	Added MemberFunction Rotation Vehicle:GetDriverRotation()
	Added MemberFunction Vector3 Vehicle:GetCenterOfMassOffset()
	Added MemberFunction void Vehicle:SetCenterOfMassOffset(Vector3 offset) [RequiresAuthority] [Dynamic]
	Added MemberFunction void Vehicle:ApplyDamage(Damage damage) [RequiresAuthority] [Dynamic]
	Added MemberFunction void Vehicle:Die(Damage damage) [RequiresAuthority] [Dynamic]
	Added MemberFunction void Vehicle:Die() [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean Vehicle:IsA(string typeName)
Changed Class Vfx
	Added MemberFunction boolean Vfx:IsA(string typeName)
Added Class VoiceChatChannel
	Added Property string VoiceChatChannel.name [ReadOnly]
	Added Property VoiceChannelType VoiceChatChannel.channelType [ReadOnly]
	Added Property string VoiceChatChannel.type [ReadOnly]
	Added MemberFunction Array<Player> VoiceChatChannel:GetPlayers()
	Added MemberFunction boolean VoiceChatChannel:IsPlayerInChannel(Player player)
	Added MemberFunction boolean VoiceChatChannel:IsPlayerMuted(Player player)
	Added MemberFunction void VoiceChatChannel:MutePlayer(Player player) [ServerOnly]
	Added MemberFunction void VoiceChatChannel:UnmutePlayer(Player player) [ServerOnly]
	Added MemberFunction boolean VoiceChatChannel:IsA(string typeName)
Changed Class Weapon
	Added Property number Weapon.attackCooldownDuration [ReadOnly]
	Added Property string Weapon.animationStance [ReadOnly]
	Added Property integer Weapon.multiShotCount [ReadOnly]
	Added Property integer Weapon.burstCount [ReadOnly]
	Added Property number Weapon.shotsPerSecond [ReadOnly]
	Added Property boolean Weapon.shouldBurstStopOnRelease [ReadOnly]
	Added Property boolean Weapon.isHitscan [ReadOnly]
	Added Property number Weapon.range [ReadOnly]
	Added Property number Weapon.damage [ReadOnly]
	Added Property string Weapon.projectileTemplateId [ReadOnly]
	Added Property string Weapon.muzzleFlashTemplateId [ReadOnly]
	Added Property string Weapon.trailTemplateId [ReadOnly]
	Added Property string Weapon.beamTemplateId [ReadOnly]
	Added Property string Weapon.impactSurfaceTemplateId [ReadOnly]
	Added Property string Weapon.impactProjectileTemplateId [ReadOnly]
	Added Property string Weapon.impactPlayerTemplateId [ReadOnly]
	Added Property number Weapon.projectileSpeed [ReadOnly]
	Added Property number Weapon.projectileLifeSpan [ReadOnly]
	Added Property number Weapon.projectileGravity [ReadOnly]
	Added Property number Weapon.projectileLength [ReadOnly]
	Added Property number Weapon.projectileRadius [ReadOnly]
	Added Property number Weapon.projectileDrag [ReadOnly]
	Added Property integer Weapon.projectileBounceCount [ReadOnly]
	Added Property integer Weapon.projectilePierceCount [ReadOnly]
	Added Property integer Weapon.maxAmmo [ReadOnly]
	Added Property integer Weapon.currentAmmo [RequiresAuthority] [Dynamic]
	Added Property string Weapon.ammoType [ReadOnly]
	Added Property boolean Weapon.isAmmoFinite [ReadOnly]
	Added Property string Weapon.outOfAmmoSoundId [ReadOnly]
	Added Property string Weapon.reloadSoundId [ReadOnly]
	Added Property number Weapon.spreadMin [ReadOnly]
	Added Property number Weapon.spreadMax [ReadOnly]
	Added Property number Weapon.spreadAperture [ReadOnly]
	Added Property number Weapon.spreadDecreaseSpeed [ReadOnly]
	Added Property number Weapon.spreadIncreasePerShot [ReadOnly]
	Added Property number Weapon.spreadPenaltyPerShot [ReadOnly]
	Added Property string Weapon.attackSoundTemplateId [ReadOnly]
	Added Event Weapon.projectileSpawnedEvent<Weapon, Projectile>
	Added Event Weapon.targetImpactedEvent<Weapon, ImpactData>
	Added Event Weapon.targetInteractionEvent<ImpactData>
Changed Class Weapon
	Added MemberFunction boolean Weapon:HasAmmo()
	Added MemberFunction boolean Weapon:IsA(string typeName)
Changed Class WorldText
	Added Property string WorldText.text [RequiresAuthority] [Dynamic]
	Added MemberFunction void WorldText:SetFont(string font) [RequiresAuthority] [Dynamic]
	Added MemberFunction boolean WorldText:IsA(string typeName)
Changed Class Ability
	Removed Property string Ability.actionBinding [ReadOnly]
	Removed Property bool Ability.canActivateWhileDead [ReadOnly]
	Removed Property string Ability.animation [ReadOnly]
	Removed Property bool Ability.canBePrevented [ReadOnly]
	Removed Property AbilityPhaseSettings Ability.castPhaseSettings [ReadOnly]
	Removed Property AbilityPhaseSettings Ability.executePhaseSettings [ReadOnly]
	Removed Property AbilityPhaseSettings Ability.recoveryPhaseSettings [ReadOnly]
	Removed Property AbilityPhaseSettings Ability.cooldownPhaseSettings [ReadOnly]
	Removed Property bool Ability.isEnabled [RequiresAuthority]
	Removed Property Object Ability.owner [RequiresAuthority]
	Removed Event Ability.readyEvent<Ability>
	Removed Event Ability.castEvent<Ability>
	Removed Event Ability.executeEvent<Ability>
	Removed Event Ability.recoveryEvent<Ability>
	Removed Event Ability.cooldownEvent<Ability>
	Removed Event Ability.interruptedEvent<Ability>
	Removed Event Ability.tickEvent<Ability, number>
Changed Class Ability
	Removed MemberFunction bool Ability:IsA(string typeName)
Changed Class AbilityPhaseSettings
	Removed Property number AbilityPhaseSettings.duration [ReadOnly]
	Removed Property bool AbilityPhaseSettings.canMove [ReadOnly]
	Removed Property bool AbilityPhaseSettings.canJump [ReadOnly]
	Removed Property bool AbilityPhaseSettings.canRotate [ReadOnly]
	Removed Property bool AbilityPhaseSettings.preventsOtherAbilities [ReadOnly]
	Removed Property bool AbilityPhaseSettings.isTargetDataUpdated [ReadOnly]
	Removed Property AbilityFacingMode AbilityPhaseSettings.facingMode [ReadOnly]
	Removed MemberFunction bool AbilityPhaseSettings:IsA(string typeName)
Changed Class AbilityTarget
	Removed Property Player AbilityTarget.hitPlayer
	Removed Property Object AbilityTarget.hitObject
	Removed Property number AbilityTarget.spreadHalfAngle
	Removed Property integer AbilityTarget.spreadRandomSeed
	Removed MemberFunction bool AbilityTarget:IsA(string typeName)
Changed Class AnimatedMesh
	Removed Property string AnimatedMesh.animationStance [ClientOnly]
	Removed Property number AnimatedMesh.animationStancePlaybackRate [ClientOnly]
	Removed Property bool AnimatedMesh.animationStanceShouldLoop [ClientOnly]
	Removed Property number AnimatedMesh.playbackRateMultiplier [ClientOnly]
	Removed Event AnimatedMesh.animationEvent<AnimatedMesh, string> [ClientOnly]
Changed Class AnimatedMesh
	Removed MemberFunction bool AnimatedMesh:IsA(string typeName)
Changed Class AreaLight
	Removed Property number AreaLight.sourceWidth [RequiresAuthority] [Dynamic]
	Removed Property number AreaLight.sourceHeight [RequiresAuthority] [Dynamic]
	Removed Property number AreaLight.barnDoorAngle [RequiresAuthority] [Dynamic]
	Removed Property number AreaLight.barnDoorLength [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool AreaLight:IsA(string typeName)
Changed Class Audio
	Removed Property bool Audio.isSpatializationEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool Audio.isAttenuationEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool Audio.isOcclusionEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool Audio.isAutoPlayEnabled [ReadOnly]
	Removed Property bool Audio.isTransient [RequiresAuthority] [Dynamic]
	Removed Property bool Audio.isAutoRepeatEnabled [RequiresAuthority] [Dynamic]
	Removed Property number Audio.pitch [RequiresAuthority] [Dynamic]
	Removed Property number Audio.volume [RequiresAuthority] [Dynamic]
	Removed Property number Audio.radius [RequiresAuthority] [Dynamic]
	Removed Property number Audio.falloff [RequiresAuthority] [Dynamic]
	Removed Property bool Audio.isPlaying [ReadOnly]
	Removed Property number Audio.length [ReadOnly]
	Removed Property number Audio.currentPlaybackTime [ReadOnly]
	Removed Property number Audio.fadeInTime [RequiresAuthority] [Dynamic]
	Removed Property number Audio.fadeOutTime [RequiresAuthority] [Dynamic]
	Removed Property number Audio.startTime [RequiresAuthority] [Dynamic]
	Removed Property number Audio.stopTime [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool Audio:IsA(string typeName)
Changed Class Camera
	Removed Property Player Camera.followPlayer [RequiresAuthority] [Dynamic]
	Removed Property bool Camera.isOrthographic [RequiresAuthority] [Dynamic]
	Removed Property number Camera.fieldOfView [RequiresAuthority] [Dynamic]
	Removed Property number Camera.viewWidth [RequiresAuthority] [Dynamic]
	Removed Property bool Camera.useCameraSocket [RequiresAuthority] [Dynamic]
	Removed Property number Camera.currentDistance [ClientOnly]
	Removed Property bool Camera.isDistanceAdjustable [RequiresAuthority] [Dynamic]
	Removed Property number Camera.minDistance [RequiresAuthority] [Dynamic]
	Removed Property number Camera.maxDistance [RequiresAuthority] [Dynamic]
	Removed Property RotationMode Camera.rotationMode [RequiresAuthority] [Dynamic]
	Removed Property bool Camera.hasFreeControl [RequiresAuthority] [Dynamic]
	Removed Property number Camera.currentPitch [ClientOnly]
	Removed Property number Camera.minPitch [RequiresAuthority] [Dynamic]
	Removed Property number Camera.maxPitch [RequiresAuthority] [Dynamic]
	Removed Property bool Camera.isYawLimited [RequiresAuthority] [Dynamic]
	Removed Property number Camera.currentYaw [ClientOnly]
	Removed Property number Camera.minYaw [RequiresAuthority] [Dynamic]
	Removed Property number Camera.maxYaw [RequiresAuthority] [Dynamic]
	Removed Property bool Camera.isUsingCameraRotation [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool Camera:IsA(string typeName)
Changed Class Color
	Removed Property number Color.r
	Removed Property number Color.g
	Removed Property number Color.b
	Removed Property number Color.a
	Removed MemberFunction bool Color:IsA(string typeName)
	Removed Constructor Color Color.New(Color color)
	Removed Constructor Color Color.New(Vector4 rgbaVector)
	Removed Constructor Color Color.New(Vector3 rgbVector)
	Removed Constructor Color Color.New(number red, number green, number blue, number alpha)
	Removed Constructor Color Color.New(number red, number green, number blue)
	Removed Constructor Color Color.New()
	Removed Constant Color Color.WHITE
	Removed Constant Color Color.GRAY
	Removed Constant Color Color.BLACK
	Removed Constant Color Color.TRANSPARENT
	Removed Constant Color Color.RED
	Removed Constant Color Color.GREEN
	Removed Constant Color Color.BLUE
	Removed Constant Color Color.CYAN
	Removed Constant Color Color.MAGENTA
	Removed Constant Color Color.YELLOW
	Removed Constant Color Color.ORANGE
	Removed Constant Color Color.PURPLE
	Removed Constant Color Color.BROWN
	Removed Constant Color Color.PINK
	Removed Constant Color Color.TAN
	Removed Constant Color Color.RUBY
	Removed Constant Color Color.EMERALD
	Removed Constant Color Color.SAPPHIRE
	Removed Constant Color Color.SILVER
	Removed Constant Color Color.SMOKE
Changed Class CoreMesh
	Removed Property string CoreMesh.meshAssetId [ReadOnly]
	Removed Property integer CoreMesh.team [RequiresAuthority] [Dynamic]
	Removed Property bool CoreMesh.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Removed Property bool CoreMesh.isTeamCollisionEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool CoreMesh.isEnemyCollisionEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool CoreMesh.isCameraCollisionEnabled [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool CoreMesh:IsA(string typeName)
Changed Class CoreObject
	Removed Property string CoreObject.name [RequiresAuthority] [Dynamic]
	Removed Property string CoreObject.id [ReadOnly]
	Removed Property bool CoreObject.isVisible [RequiresAuthority] [Dynamic]
	Removed Property Visibility CoreObject.visibility [RequiresAuthority] [Dynamic]
	Removed Property bool CoreObject.isCollidable [RequiresAuthority] [Dynamic]
	Removed Property Collision CoreObject.collision [RequiresAuthority] [Dynamic]
	Removed Property bool CoreObject.isEnabled [RequiresAuthority] [Dynamic]
	Removed Property number CoreObject.lifeSpan [RequiresAuthority] [Dynamic]
	Removed Property bool CoreObject.isStatic [ReadOnly]
	Removed Property bool CoreObject.isNetworked [ReadOnly]
	Removed Property bool CoreObject.isClientOnly [ReadOnly]
	Removed Property bool CoreObject.isServerOnly [ReadOnly]
	Removed Property CoreObject CoreObject.parent [RequiresAuthority] [Dynamic]
	Removed Property string CoreObject.sourceTemplateId [ReadOnly]
	Removed Event CoreObject.childAddedEvent<CoreObject, CoreObject>
	Removed Event CoreObject.childRemovedEvent<CoreObject, CoreObject>
	Removed Event CoreObject.descendantAddedEvent<CoreObject, CoreObject>
	Removed Event CoreObject.descendantRemovedEvent<CoreObject, CoreObject>
	Removed Event CoreObject.destroyEvent<CoreObject>
	Removed Event CoreObject.networkedPropertyChangedEvent<CoreObject, string>
Changed Class CoreObject
	Removed MemberFunction bool CoreObject:IsVisibleInHierarchy()
	Removed MemberFunction bool CoreObject:IsCollidableInHierarchy()
	Removed MemberFunction bool CoreObject:IsEnabledInHierarchy()
	Removed MemberFunction bool CoreObject:IsAncestorOf(CoreObject coreObject)
	Removed MemberFunction void CoreObject:MoveTo(Vector3 position, number duration, bool isLocalPosition) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:MoveContinuous(Vector3 worldVelocity, bool isLocalVelocity) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateTo(Quaternion rotation, number duration, bool isLocalRotation) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateTo(Rotation rotation, number duration, bool isLocalRotation) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Vector3 angularVelocity, bool isLocalAngularVelocity) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Vector3 angularVelocity) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Quaternion quaternionSpeed, number multiplier, bool isLocalQuaternionSpeed) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Quaternion quaternionSpeed, number multiplier) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Quaternion quaternionSpeed) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Rotation rotationSpeed, number multiplier, bool isLocalRotationSpeed) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Rotation rotationSpeed, number multiplier) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:RotateContinuous(Rotation rotationSpeed) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:LookAtContinuous(Player target, bool isPitchLocked, number speed) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:LookAtContinuous(Player target, bool isPitchLocked) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:LookAtContinuous(CoreObject target, bool isPitchLocked, number speed) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:LookAtContinuous(CoreObject target, bool isPitchLocked) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:LookAtLocalView(bool isPitchLocked) [RequiresAuthority] [ClientOnly] [Dynamic]
	Removed MemberFunction void CoreObject:ScaleTo(Vector3 scale, number duration, bool isScaleLocal) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void CoreObject:ScaleContinuous(Vector3 scaleRate, bool isLocalScaleRate) [RequiresAuthority] [Dynamic]
	Removed MemberFunction value, bool CoreObject:GetCustomProperty(string propertyName)
	Removed MemberFunction bool CoreObject:SetNetworkedCustomProperty(string propertyName, value propertyValue) [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool CoreObject:IsA(string typeName)
Changed Class CoreObjectReference
	Removed Property string CoreObjectReference.id [ReadOnly]
	Removed Property bool CoreObjectReference.isAssigned [ReadOnly]
	Removed MemberFunction bool CoreObjectReference:IsA(string typeName)
Changed Class Damage
	Removed Property number Damage.amount
	Removed Property DamageReason Damage.reason
	Removed Property Ability Damage.sourceAbility
	Removed Property Player Damage.sourcePlayer
	Removed MemberFunction bool Damage:IsA(string typeName)
Changed Class Decal
	Removed MemberFunction bool Decal:IsA(string typeName)
Changed Class Equipment
	Removed Property Player Equipment.owner [ReadOnly]
	Removed Property string Equipment.socket [RequiresAuthority] [Dynamic]
	Removed Event Equipment.equippedEvent<Equipment, Player>
	Removed Event Equipment.unequippedEvent<Equipment, Player>
Changed Class Equipment
	Removed MemberFunction bool Equipment:IsA(string typeName)
Changed Class Event
	Removed MemberFunction bool Event:IsA(string typeName)
Changed Class EventListener
	Removed Property bool EventListener.isConnected [ReadOnly]
	Removed MemberFunction bool EventListener:IsA(string typeName)
Changed Class Folder
	Removed MemberFunction bool Folder:IsA(string typeName)
Changed Class HitResult
	Removed Property Object HitResult.other [ReadOnly]
	Removed Property string HitResult.socketName [ReadOnly]
	Removed MemberFunction bool HitResult:IsA(string typeName)
Changed Class Hook
	Removed MemberFunction bool Hook:IsA(string typeName)
Changed Class HookListener
	Removed Property bool HookListener.isConnected [ReadOnly]
	Removed Property integer HookListener.priority
	Removed MemberFunction bool HookListener:IsA(string typeName)
Changed Class ImpactData
	Removed Property Object ImpactData.targetObject [ReadOnly]
	Removed Property Projectile ImpactData.projectile [ReadOnly]
	Removed Property Ability ImpactData.sourceAbility [ReadOnly]
	Removed Property Weapon ImpactData.weapon [ReadOnly]
	Removed Property Player ImpactData.weaponOwner [ReadOnly]
	Removed Property bool ImpactData.isHeadshot [ReadOnly]
	Removed Property number ImpactData.travelDistance [ReadOnly]
	Removed MemberFunction bool ImpactData:IsA(string typeName)
Changed Class LeaderboardEntry
	Removed Property string LeaderboardEntry.id [ReadOnly]
	Removed Property string LeaderboardEntry.name [ReadOnly]
	Removed Property number LeaderboardEntry.score [ReadOnly]
	Removed Property string LeaderboardEntry.additionalData [ReadOnly]
	Removed MemberFunction bool LeaderboardEntry:IsA(string typeName)
Changed Class Light
	Removed Property number Light.intensity [RequiresAuthority] [Dynamic]
	Removed Property number Light.attenuationRadius [RequiresAuthority] [Dynamic]
	Removed Property bool Light.isShadowCaster [RequiresAuthority] [Dynamic]
	Removed Property bool Light.hasTemperature [RequiresAuthority] [Dynamic]
	Removed Property number Light.temperature [RequiresAuthority] [Dynamic]
	Removed Property integer Light.team [RequiresAuthority] [Dynamic]
	Removed Property bool Light.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool Light:IsA(string typeName)
Changed Class MergedModel
	Removed MemberFunction bool MergedModel:IsA(string typeName)
Changed Class NetReference
	Removed Property bool NetReference.isAssigned [ReadOnly]
	Removed Property NetReferenceType NetReference.referenceType [ReadOnly]
	Removed MemberFunction bool NetReference:IsA(string typeName)
Changed Class NetworkContext
	Removed MemberFunction bool NetworkContext:IsA(string typeName)
Changed Class Object
	Removed Property table Object.serverUserData [ServerOnly]
	Removed Property table Object.clientUserData [ClientOnly]
	Removed MemberFunction bool Object:IsA(string typeName)
	Removed StaticFunction bool Object.IsValid(value object)
Changed Class Player
	Removed Property string Player.id [ReadOnly]
	Removed Property string Player.name [ServerOnly]
	Removed Property integer Player.team [ServerOnly]
	Removed Property number Player.hitPoints [ServerOnly]
	Removed Property number Player.maxHitPoints [ServerOnly]
	Removed Property integer Player.kills [ServerOnly]
	Removed Property integer Player.deaths [ServerOnly]
	Removed Property bool Player.isDead [ReadOnly]
	Removed Property number Player.mass [ReadOnly]
	Removed Property bool Player.isAccelerating [ReadOnly]
	Removed Property bool Player.isCrouching [ReadOnly]
	Removed Property bool Player.isFlying [ReadOnly]
	Removed Property bool Player.isGrounded [ReadOnly]
	Removed Property bool Player.isJumping [ReadOnly]
	Removed Property bool Player.isMounted [ReadOnly]
	Removed Property bool Player.isSwimming [ReadOnly]
	Removed Property bool Player.isWalking [ReadOnly]
	Removed Property bool Player.isSliding [ReadOnly]
	Removed Property number Player.maxWalkSpeed [ServerOnly]
	Removed Property number Player.stepHeight [ServerOnly]
	Removed Property number Player.maxAcceleration [ServerOnly]
	Removed Property number Player.brakingDecelerationFalling [ServerOnly]
	Removed Property number Player.brakingDecelerationWalking [ServerOnly]
	Removed Property number Player.groundFriction [ServerOnly]
	Removed Property number Player.brakingFrictionFactor [ServerOnly]
	Removed Property number Player.walkableFloorAngle [ServerOnly]
	Removed Property number Player.lookSensitivity [ClientOnly]
	Removed Property string Player.animationStance [ServerOnly]
	Removed Property FacingMode Player.currentFacingMode [ReadOnly]
	Removed Property FacingMode Player.desiredFacingMode [ServerOnly]
	Removed Property integer Player.maxJumpCount [ServerOnly]
	Removed Property bool Player.flipOnMultiJump [ServerOnly]
	Removed Property bool Player.shouldFlipOnMultiJump [ServerOnly]
	Removed Property number Player.jumpVelocity [ServerOnly]
	Removed Property number Player.gravityScale [ServerOnly]
	Removed Property number Player.maxSwimSpeed [ServerOnly]
	Removed Property number Player.touchForceFactor [ServerOnly]
	Removed Property bool Player.isCrouchEnabled [ServerOnly]
	Removed Property number Player.buoyancy [ServerOnly]
	Removed Property bool Player.isVisibleToSelf [ClientOnly]
	Removed Property number Player.spreadModifier
	Removed Property number Player.currentSpread [ReadOnly] [ClientOnly]
	Removed Property bool Player.canMount [ServerOnly]
	Removed Property bool Player.shouldDismountWhenDamaged [ServerOnly]
	Removed Property MovementControlMode Player.movementControlMode [ServerOnly]
	Removed Property LookControlMode Player.lookControlMode [ServerOnly]
	Removed Property number Player.currentRotationRate [ReadOnly]
	Removed Property number Player.defaultRotationRate [ServerOnly]
	Removed Event Player.damagedEvent<Player, Damage>
	Removed Event Player.diedEvent<Player, Damage>
	Removed Event Player.respawnedEvent<Player>
	Removed Event Player.bindingPressedEvent<Player, string>
	Removed Event Player.bindingReleasedEvent<Player, string>
	Removed Event Player.resourceChangedEvent<Player, string, integer>
	Removed Event Player.movementModeChangedEvent<Player, MovementMode, MovementMode>
	Removed Event Player.animationEvent<Player, string> [ClientOnly]
	Removed Event Player.perkChangedEvent<Player, NetReference>
Changed Class Player
	Removed MemberFunction void Player:SetVisibility(bool isVisible, bool includeAttachments) [ServerOnly]
	Removed MemberFunction void Player:SetVisibility(bool isVisible) [ServerOnly]
	Removed MemberFunction bool Player:GetVisibility()
	Removed MemberFunction void Player:Respawn(Vector3 position, Rotation rotation) [ServerOnly]
	Removed MemberFunction void Player:TransferToGame(string gameId) [ServerOnly]
	Removed MemberFunction bool Player:HasPerk(NetReference perkReference)
	Removed MemberFunction void Player:SetMounted(bool isMounted) [ServerOnly]
	Removed MemberFunction bool Player:IsBindingPressed(string bindingName)
	Removed MemberFunction bool Player:IsA(string typeName)
Changed Class PlayerSettings
	Removed MemberFunction bool PlayerSettings:IsA(string typeName)
Changed Class PlayerStart
	Removed Property integer PlayerStart.team [ServerOnly] [Dynamic]
	Removed MemberFunction bool PlayerStart:IsA(string typeName)
Changed Class PointLight
	Removed Property bool PointLight.hasNaturalFalloff [RequiresAuthority] [Dynamic]
	Removed Property number PointLight.falloffExponent [RequiresAuthority] [Dynamic]
	Removed Property number PointLight.sourceRadius [RequiresAuthority] [Dynamic]
	Removed Property number PointLight.sourceLength [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool PointLight:IsA(string typeName)
Changed Class Projectile
	Removed Property Ability Projectile.sourceAbility [RequiresAuthority]
	Removed Property bool Projectile.shouldBounceOnPlayers [RequiresAuthority]
	Removed Property bool Projectile.shouldDieOnImpact [RequiresAuthority]
	Removed Property Player Projectile.owner [RequiresAuthority]
	Removed Property number Projectile.speed [RequiresAuthority]
	Removed Property number Projectile.maxSpeed [RequiresAuthority]
	Removed Property number Projectile.gravityScale [RequiresAuthority]
	Removed Property number Projectile.drag [RequiresAuthority]
	Removed Property integer Projectile.bouncesRemaining [RequiresAuthority]
	Removed Property number Projectile.bounciness [RequiresAuthority]
	Removed Property integer Projectile.piercesRemaining [RequiresAuthority]
	Removed Property number Projectile.lifeSpan [RequiresAuthority]
	Removed Property number Projectile.capsuleRadius [RequiresAuthority]
	Removed Property number Projectile.capsuleLength [RequiresAuthority]
	Removed Property Object Projectile.homingTarget [RequiresAuthority]
	Removed Property number Projectile.homingAcceleration [RequiresAuthority]
	Removed Event Projectile.impactEvent<Projectile, Object, HitResult>
	Removed Event Projectile.lifeSpanEndedEvent<Projectile>
	Removed Event Projectile.homingFailedEvent<Projectile>
Changed Class Projectile
	Removed MemberFunction bool Projectile:IsA(string typeName)
Changed Class Quaternion
	Removed Property number Quaternion.x
	Removed Property number Quaternion.y
	Removed Property number Quaternion.z
	Removed Property number Quaternion.w
	Removed MemberFunction bool Quaternion:IsA(string typeName)
	Removed Constructor Quaternion Quaternion.New(Quaternion quaternion)
	Removed Constructor Quaternion Quaternion.New(Vector3 fromDirection, Vector3 toDirection)
	Removed Constructor Quaternion Quaternion.New(Vector3 axis, number angle)
	Removed Constructor Quaternion Quaternion.New(Rotation rotation)
	Removed Constructor Quaternion Quaternion.New(number x, number y, number z, number w)
	Removed Constructor Quaternion Quaternion.New()
	Removed Constant Quaternion Quaternion.IDENTITY
Changed Class RandomStream
	Removed Property integer RandomStream.seed
	Removed MemberFunction bool RandomStream:IsA(string typeName)
Changed Class Rotation
	Removed Property number Rotation.x
	Removed Property number Rotation.y
	Removed Property number Rotation.z
	Removed MemberFunction bool Rotation:IsA(string typeName)
	Removed Constructor Rotation Rotation.New(Vector3 forwardVector, Vector3 upVector)
	Removed Constructor Rotation Rotation.New(Rotation rotation)
	Removed Constructor Rotation Rotation.New(Quaternion quaternion)
	Removed Constructor Rotation Rotation.New(number x, number y, number z)
	Removed Constructor Rotation Rotation.New()
	Removed Constant Rotation Rotation.ZERO
Changed Class Script
	Removed Property table Script.context [ReadOnly]
	Removed MemberFunction bool Script:IsA(string typeName)
Changed Class ScriptAsset
	Removed Property string ScriptAsset.name [ReadOnly]
	Removed Property string ScriptAsset.id [ReadOnly]
	Removed MemberFunction value, bool ScriptAsset:GetCustomProperty(string propertyName)
	Removed MemberFunction bool ScriptAsset:IsA(string typeName)
Changed Class SmartAudio
	Removed Property bool SmartAudio.isSpatializationEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool SmartAudio.isAttenuationEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool SmartAudio.isOcclusionEnabled [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.fadeInTime [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.fadeOutTime [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.startTime [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.stopTime [RequiresAuthority] [Dynamic]
	Removed Property bool SmartAudio.isAutoPlayEnabled [ReadOnly]
	Removed Property bool SmartAudio.isTransient [RequiresAuthority] [Dynamic]
	Removed Property bool SmartAudio.isAutoRepeatEnabled [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.pitch [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.volume [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.radius [RequiresAuthority] [Dynamic]
	Removed Property number SmartAudio.falloff [RequiresAuthority] [Dynamic]
	Removed Property bool SmartAudio.isPlaying [ReadOnly]
	Removed MemberFunction void SmartAudio:FadeIn(number _) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void SmartAudio:FadeOut(number _) [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool SmartAudio:IsA(string typeName)
Changed Class SmartObject
	Removed Property integer SmartObject.team [RequiresAuthority] [Dynamic]
	Removed Property bool SmartObject.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Removed MemberFunction value, bool SmartObject:GetSmartProperty(string propertyName)
	Removed MemberFunction bool SmartObject:SetSmartProperty(string propertyName, value propertyValue) [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool SmartObject:IsA(string typeName)
Changed Class SpotLight
	Removed Property bool SpotLight.hasNaturalFalloff [RequiresAuthority] [Dynamic]
	Removed Property number SpotLight.falloffExponent [RequiresAuthority] [Dynamic]
	Removed Property number SpotLight.sourceRadius [RequiresAuthority] [Dynamic]
	Removed Property number SpotLight.sourceLength [RequiresAuthority] [Dynamic]
	Removed Property number SpotLight.innerConeAngle [RequiresAuthority] [Dynamic]
	Removed Property number SpotLight.outerConeAngle [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool SpotLight:IsA(string typeName)
Changed Class StaticMesh
	Removed Property bool StaticMesh.isSimulatingDebrisPhysics [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool StaticMesh:IsA(string typeName)
Changed Class Task
	Removed Property number Task.repeatInterval
	Removed Property integer Task.repeatCount
	Removed Property integer Task.id [ReadOnly]
	Removed MemberFunction bool Task:IsA(string typeName)
Changed Class Terrain
	Removed MemberFunction bool Terrain:IsA(string typeName)
Changed Class Transform
	Removed MemberFunction bool Transform:IsA(string typeName)
	Removed Constructor Transform Transform.New(Transform transform)
	Removed Constructor Transform Transform.New(Vector3 xAxis, Vector3 yAxis, Vector3 zAxis, Vector3 position)
	Removed Constructor Transform Transform.New(Rotation rotation, Vector3 position, Vector3 scale)
	Removed Constructor Transform Transform.New(Quaternion rotation, Vector3 position, Vector3 scale)
	Removed Constructor Transform Transform.New()
	Removed Constant Transform Transform.IDENTITY
Changed Class Trigger
	Removed Property bool Trigger.isInteractable [RequiresAuthority] [Dynamic]
	Removed Property string Trigger.interactionLabel [RequiresAuthority] [Dynamic]
	Removed Property integer Trigger.team [RequiresAuthority] [Dynamic]
	Removed Property bool Trigger.isTeamCollisionEnabled [RequiresAuthority] [Dynamic]
	Removed Property bool Trigger.isEnemyCollisionEnabled [RequiresAuthority] [Dynamic]
	Removed Event Trigger.beginOverlapEvent<Trigger, Object>
	Removed Event Trigger.endOverlapEvent<Trigger, Object>
	Removed Event Trigger.interactedEvent<Trigger, Player>
Changed Class Trigger
	Removed MemberFunction bool Trigger:IsOverlapping(Object OtherObject)
	Removed MemberFunction bool Trigger:IsA(string typeName)
Changed Class UIButton
	Removed Property string UIButton.text [RequiresAuthority] [Dynamic]
	Removed Property integer UIButton.fontSize [RequiresAuthority] [Dynamic]
	Removed Property bool UIButton.isInteractable [RequiresAuthority] [Dynamic]
	Removed Event UIButton.clickedEvent<UIButton>
	Removed Event UIButton.pressedEvent<UIButton>
	Removed Event UIButton.releasedEvent<UIButton>
	Removed Event UIButton.hoveredEvent<UIButton>
	Removed Event UIButton.unhoveredEvent<UIButton>
Changed Class UIButton
	Removed MemberFunction bool UIButton:IsA(string typeName)
Changed Class UIContainer
	Removed MemberFunction bool UIContainer:IsA(string typeName)
Changed Class UIControl
	Removed Property number UIControl.x [RequiresAuthority] [Dynamic]
	Removed Property number UIControl.y [RequiresAuthority] [Dynamic]
	Removed Property integer UIControl.width [RequiresAuthority] [Dynamic]
	Removed Property integer UIControl.height [RequiresAuthority] [Dynamic]
	Removed Property number UIControl.rotationAngle [RequiresAuthority] [Dynamic]
	Removed Property UIPivot UIControl.anchor [RequiresAuthority] [Dynamic]
	Removed Property UIPivot UIControl.dock [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool UIControl:IsA(string typeName)
Changed Class UIImage
	Removed Property bool UIImage.isTeamColorUsed [RequiresAuthority] [Dynamic]
	Removed Property integer UIImage.team [RequiresAuthority] [Dynamic]
	Removed MemberFunction void UIImage:SetImage(Player player) [RequiresAuthority] [Dynamic]
	Removed MemberFunction void UIImage:SetImage(string imageId) [RequiresAuthority] [Dynamic]
	Removed MemberFunction string UIImage:GetImage()
	Removed MemberFunction bool UIImage:IsA(string typeName)
Changed Class UIPanel
	Removed Property integer UIPanel.shouldClipChildren [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool UIPanel:IsA(string typeName)
Changed Class UIPerkPurchaseButton
	Removed Property bool UIPerkPurchaseButton.isInteractable [RequiresAuthority] [Dynamic]
	Removed Event UIPerkPurchaseButton.clickedEvent<UIPerkPurchaseButton>
	Removed Event UIPerkPurchaseButton.pressedEvent<UIPerkPurchaseButton>
	Removed Event UIPerkPurchaseButton.releasedEvent<UIPerkPurchaseButton>
	Removed Event UIPerkPurchaseButton.hoveredEvent<UIPerkPurchaseButton>
	Removed Event UIPerkPurchaseButton.unhoveredEvent<UIPerkPurchaseButton>
Changed Class UIPerkPurchaseButton
	Removed MemberFunction bool UIPerkPurchaseButton:IsA(string typeName)
Changed Class UIProgressBar
	Removed Property number UIProgressBar.progress [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool UIProgressBar:IsA(string typeName)
Changed Class UIScrollPanel
	Removed MemberFunction bool UIScrollPanel:IsA(string typeName)
Changed Class UIText
	Removed Property string UIText.text [RequiresAuthority] [Dynamic]
	Removed Property integer UIText.fontSize [RequiresAuthority] [Dynamic]
	Removed Property TextJustify UIText.justification [RequiresAuthority] [Dynamic]
	Removed Property bool UIText.shouldWrapText [RequiresAuthority] [Dynamic]
	Removed Property bool UIText.shouldClipText [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool UIText:IsA(string typeName)
Changed Class Vector2
	Removed Property number Vector2.x
	Removed Property number Vector2.y
	Removed Property number Vector2.size [ReadOnly]
	Removed Property number Vector2.sizeSquared [ReadOnly]
	Removed MemberFunction bool Vector2:IsA(string typeName)
	Removed Constructor Vector2 Vector2.New(number xy)
	Removed Constructor Vector2 Vector2.New(Vector3 vector)
	Removed Constructor Vector2 Vector2.New(Vector2 vector)
	Removed Constructor Vector2 Vector2.New(number x, number y)
	Removed Constructor Vector2 Vector2.New()
	Removed Constant Vector2 Vector2.ZERO
	Removed Constant Vector2 Vector2.ONE
Changed Class Vector3
	Removed Property number Vector3.x
	Removed Property number Vector3.y
	Removed Property number Vector3.z
	Removed Property number Vector3.size [ReadOnly]
	Removed Property number Vector3.sizeSquared [ReadOnly]
	Removed MemberFunction bool Vector3:IsA(string typeName)
	Removed Constructor Vector3 Vector3.New(number xyz)
	Removed Constructor Vector3 Vector3.New(Vector4 vector)
	Removed Constructor Vector3 Vector3.New(Vector3 vector)
	Removed Constructor Vector3 Vector3.New(Vector2 xy, number z)
	Removed Constructor Vector3 Vector3.New(number x, number y, number z)
	Removed Constructor Vector3 Vector3.New()
	Removed Constant Vector3 Vector3.ZERO
	Removed Constant Vector3 Vector3.ONE
	Removed Constant Vector3 Vector3.FORWARD
	Removed Constant Vector3 Vector3.UP
	Removed Constant Vector3 Vector3.RIGHT
Changed Class Vector4
	Removed Property number Vector4.x
	Removed Property number Vector4.y
	Removed Property number Vector4.z
	Removed Property number Vector4.w
	Removed Property number Vector4.size [ReadOnly]
	Removed Property number Vector4.sizeSquared [ReadOnly]
	Removed MemberFunction bool Vector4:IsA(string typeName)
	Removed Constructor Vector4 Vector4.New(Vector2 xy, Vector2 zw)
	Removed Constructor Vector4 Vector4.New(Color color)
	Removed Constructor Vector4 Vector4.New(number xyzw)
	Removed Constructor Vector4 Vector4.New(Vector3 xyz, number w)
	Removed Constructor Vector4 Vector4.New(Vector4 vector)
	Removed Constructor Vector4 Vector4.New(number x, number y, number z, number w)
	Removed Constructor Vector4 Vector4.New()
	Removed Constant Vector4 Vector4.ZERO
	Removed Constant Vector4 Vector4.ONE
Changed Class Vfx
	Removed MemberFunction bool Vfx:IsA(string typeName)
Changed Class Weapon
	Removed Property number Weapon.attackCooldownDuration [ReadOnly]
	Removed Property string Weapon.animationStance [ReadOnly]
	Removed Property integer Weapon.multiShotCount [ReadOnly]
	Removed Property integer Weapon.burstCount [ReadOnly]
	Removed Property number Weapon.shotsPerSecond [ReadOnly]
	Removed Property bool Weapon.shouldBurstStopOnRelease [ReadOnly]
	Removed Property bool Weapon.isHitscan [ReadOnly]
	Removed Property number Weapon.range [ReadOnly]
	Removed Property number Weapon.damage [ReadOnly]
	Removed Property string Weapon.projectileTemplateId [ReadOnly]
	Removed Property string Weapon.muzzleFlashTemplateId [ReadOnly]
	Removed Property string Weapon.trailTemplateId [ReadOnly]
	Removed Property string Weapon.beamTemplateId [ReadOnly]
	Removed Property string Weapon.impactSurfaceTemplateId [ReadOnly]
	Removed Property string Weapon.impactProjectileTemplateId [ReadOnly]
	Removed Property string Weapon.impactPlayerTemplateId [ReadOnly]
	Removed Property number Weapon.projectileSpeed [ReadOnly]
	Removed Property number Weapon.projectileLifeSpan [ReadOnly]
	Removed Property number Weapon.projectileGravity [ReadOnly]
	Removed Property number Weapon.projectileLength [ReadOnly]
	Removed Property number Weapon.projectileRadius [ReadOnly]
	Removed Property number Weapon.projectileDrag [ReadOnly]
	Removed Property integer Weapon.projectileBounceCount [ReadOnly]
	Removed Property integer Weapon.projectilePierceCount [ReadOnly]
	Removed Property integer Weapon.maxAmmo [ReadOnly]
	Removed Property integer Weapon.currentAmmo [RequiresAuthority] [Dynamic]
	Removed Property string Weapon.ammoType [ReadOnly]
	Removed Property bool Weapon.isAmmoFinite [ReadOnly]
	Removed Property string Weapon.outOfAmmoSoundId [ReadOnly]
	Removed Property string Weapon.reloadSoundId [ReadOnly]
	Removed Property number Weapon.spreadMin [ReadOnly]
	Removed Property number Weapon.spreadMax [ReadOnly]
	Removed Property number Weapon.spreadAperture [ReadOnly]
	Removed Property number Weapon.spreadDecreaseSpeed [ReadOnly]
	Removed Property number Weapon.spreadIncreasePerShot [ReadOnly]
	Removed Property number Weapon.spreadPenaltyPerShot [ReadOnly]
	Removed Event Weapon.projectileSpawnedEvent<Weapon, Projectile>
	Removed Event Weapon.targetImpactedEvent<Weapon, ImpactData>
	Removed Event Weapon.targetInteractionEvent<ImpactData>
Changed Class Weapon
	Removed MemberFunction bool Weapon:HasAmmo()
	Removed MemberFunction bool Weapon:IsA(string typeName)
Changed Class WorldText
	Removed Property string WorldText.text [RequiresAuthority] [Dynamic]
	Removed MemberFunction bool WorldText:IsA(string typeName)

Added Namespace Chat
	Added StaticFunction BroadcastMessageResultCode, string Chat.BroadcastMessage(string message, [table  optionalParams])
	Added StaticFunction void Chat.LocalMessage(string message, [table  optionalParams])
Changed Namespace CoreDebug
	Added StaticFunction string CoreDebug.ToString(value object)
Added Namespace CorePlatform
	Added StaticFunction CoreGameInfo CorePlatform.GetGameInfo(string gameId)
	Added StaticFunction Array<CoreGameCollectionEntry> CorePlatform.GetGameCollection(string collectionId)
	Added StaticFunction CorePlayerProfile CorePlatform.GetPlayerProfile(string playerId)
	Added StaticFunction CoreGameEvent CorePlatform.GetGameEvent(string eventId)
	Added StaticFunction CoreGameEventCollection CorePlatform.GetGameEventCollection(string collectionId, [table  optionalParameters])
	Added StaticFunction CoreGameEventCollection CorePlatform.GetGameEventsForGame(string gameId, [table  optionalParameters])
	Added StaticFunction boolean CorePlatform.IsPlayerRegisteredForGameEvent(Player player, CoreGameEvent gameEvent)
	Added StaticFunction CoreGameEventCollection CorePlatform.GetRegisteredGameEvents(Player player, [table  optionalParameters])
Added Namespace CoreSocial
	Added StaticFunction boolean CoreSocial.IsFriendsWithLocalPlayer(string playerId)
	Added StaticFunction boolean CoreSocial.IsFriendsWithLocalPlayer(Player player)
	Added StaticFunction CoreFriendCollection CoreSocial.GetFriends(Player player)
Changed Namespace Environment
	Added StaticFunction boolean Environment.IsClient()
	Added StaticFunction boolean Environment.IsServer()
	Added StaticFunction boolean Environment.IsMultiplayerPreview()
	Added StaticFunction boolean Environment.IsSinglePlayerPreview()
	Added StaticFunction boolean Environment.IsPreview()
	Added StaticFunction boolean Environment.IsLocalGame()
	Added StaticFunction boolean Environment.IsHostedGame()
	Added StaticFunction DetailLevel Environment.GetDetailLevel()
Changed Namespace Game
	Added StaticFunction Player Game.FindPlayer(string playerId)
	Added StaticFunction void Game.StopAcceptingPlayers()
	Added StaticFunction boolean Game.IsAcceptingPlayers()
	Added StaticFunction void Game.TransferAllPlayersToGame(CoreGameCollectionEntry gameCollectionEntry)
	Added StaticFunction void Game.TransferAllPlayersToGame(CoreGameInfo gameInfo)
	Added StaticFunction void Game.TransferAllPlayersToGame(string gameId)
	Added StaticFunction void Game.TransferPlayersToGame(CoreGameCollectionEntry gameCollectionEntry, Array<Player> players)
	Added StaticFunction void Game.TransferPlayersToGame(CoreGameInfo gameInfo, Array<Player> players)
	Added StaticFunction void Game.TransferPlayersToGame(string gameId, Array<Player> players)
	Added StaticFunction void Game.TransferAllPlayersToScene(string sceneName, [table  optionalParams])
	Added StaticFunction void Game.TransferPlayersToScene(string sceneName, Array<Player> players, [table  optionalParams])
	Added StaticFunction string Game.GetCurrentSceneName()
	Added StaticFunction string Game.GetCurrentGameId()
Added Namespace Input
	Added StaticFunction value Input.GetActionValue(Player player, string action)
	Added StaticFunction boolean Input.IsActionHeld(Player player, string action)
	Added StaticFunction InputType Input.GetCurrentInputType()
	Added StaticFunction boolean Input.IsYAxisInverted(InputType inputType)
	Added StaticFunction string Input.GetActionDescription(string action)
	Added StaticFunction string Input.GetActionInputLabel(string action, [table  optionalParams])
	Added StaticFunction Vector2 Input.GetCursorPosition()
	Added StaticFunction Vector2 Input.GetTouchPosition()
	Added StaticFunction Vector2 Input.GetTouchPosition(integer fingerIndex)
	Added StaticFunction Vector2 Input.GetPointerPosition()
	Added StaticFunction Vector2 Input.GetPointerPosition(integer fingerIndex)
	Added StaticFunction number Input.GetPinchValue()
	Added StaticFunction number Input.GetRotateValue()
	Added StaticFunction void Input.EnableVirtualControls()
	Added StaticFunction void Input.DisableVirtualControls()
	Added StaticFunction boolean Input.IsInputTypeEnabled(InputType inputType)
	Added StaticFunction Array<string> Input.GetActions()
	Added StaticFunction void Input.EnableAction(string action)
	Added StaticFunction void Input.DisableAction(string action)
	Added StaticFunction boolean Input.IsActionEnabled(string action)
Changed Namespace Leaderboards
	Added StaticFunction boolean Leaderboards.HasLeaderboards()
Changed Namespace Storage
	Added StaticFunction table, StorageResultCode, string Storage.GetConcurrentPlayerData(string playerId)
	Added StaticFunction table, StorageResultCode, string Storage.SetConcurrentPlayerData(string playerId, function callback)
	Added StaticFunction table, StorageResultCode, string Storage.GetConcurrentSharedPlayerData(NetReference netReference, string playerId)
	Added StaticFunction table, StorageResultCode, string Storage.SetConcurrentSharedPlayerData(NetReference netReference, string playerId, function callback)
	Added StaticFunction table, StorageResultCode, string Storage.GetConcurrentCreatorData(NetReference netReference)
	Added StaticFunction table, StorageResultCode, string Storage.SetConcurrentCreatorData(NetReference netReference, function callback)
	Added StaticFunction EventListener Storage.ConnectToConcurrentPlayerDataChanged(string playerId, function callback, void argumentList)
	Added StaticFunction EventListener Storage.ConnectToConcurrentSharedPlayerDataChanged(NetReference netReference, string playerId, function callback, void argumentList)
	Added StaticFunction EventListener Storage.ConnectToConcurrentCreatorDataChanged(NetReference netReference, function callback, void argumentList)
	Added StaticFunction boolean Storage.HasPendingSetConcurrentPlayerData(string playerId)
	Added StaticFunction boolean Storage.HasPendingSetConcurrentSharedPlayerData(NetReference netReference, string playerId)
	Added StaticFunction boolean Storage.HasPendingSetConcurrentCreatorData(NetReference netReference)
	Added StaticFunction table Storage.GetOfflinePlayerData(string playerId)
	Added StaticFunction table Storage.GetSharedOfflinePlayerData(NetReference sharedStorageKey, string playerId)
Changed Namespace Teams
	Added StaticFunction boolean Teams.AreTeamsFriendly(integer team1, integer team2)
	Added StaticFunction boolean Teams.AreTeamsEnemies(integer team1, integer team2)
Changed Namespace UI
	Added StaticFunction CoreModalType UI.GetCoreModalType()
	Added StaticFunction void UI.ShowDamageDirection(CoreObject sourceObject)
	Added StaticFunction void UI.ShowDamageDirection(Player sourcePlayer)
	Added StaticFunction void UI.ShowDamageDirection(Vector3 sourceWorldPosition)
	Added StaticFunction Rectangle UI.GetSafeArea()
	Added StaticFunction HitResult UI.GetHitResult(Vector2 screenPos)
	Added StaticFunction Vector3 UI.GetPlaneIntersection(Vector2 screenPos, Vector3 pointOnPlane, Vector3 planeNormal)
	Added StaticFunction Vector3 UI.GetPlaneIntersection(Vector2 screenPos, Vector3 pointOnPlane)
	Added StaticFunction boolean UI.IsCursorVisible()
	Added StaticFunction void UI.SetCursorVisible(boolean isVisible)
	Added StaticFunction boolean UI.IsCursorLockedToViewport()
	Added StaticFunction void UI.SetCursorLockedToViewport(boolean isLocked)
	Added StaticFunction boolean UI.CanCursorInteractWithUI()
	Added StaticFunction void UI.SetCanCursorInteractWithUI(boolean canInteract)
	Added StaticFunction boolean UI.IsReticleVisible()
	Added StaticFunction void UI.SetReticleVisible(boolean isVisible)
	Added StaticFunction void UI.SetRewardsDialogVisible(boolean isVisible, [RewardsDialogTab  currentTab])
	Added StaticFunction boolean UI.IsRewardsDialogVisible()
	Added StaticFunction void UI.SetSocialMenuEnabled(boolean isEnabled)
	Added StaticFunction boolean UI.IsSocialMenuEnabled()
	Added StaticFunction boolean UI.IsVoiceChatWidgetVisible()
	Added StaticFunction void UI.SetVoiceChatWidgetVisible(boolean isVisible)
	Added StaticFunction UIControl UI.FindControlAtPosition(Vector2 Position)
Added Namespace VoiceChat
	Added StaticFunction VoiceChatMode VoiceChat.GetVoiceChatMode()
	Added StaticFunction void VoiceChat.SetVoiceChatMode(VoiceChatMode voiceChatMode)
	Added StaticFunction VoiceChatChannel VoiceChat.GetChannel(string channelName)
	Added StaticFunction Array<VoiceChatChannel> VoiceChat.GetChannels()
	Added StaticFunction Array<VoiceChatChannel> VoiceChat.GetChannelsForPlayer(Player player)
	Added StaticFunction boolean VoiceChat.IsPlayerInChannel(Player player, string channelName)
	Added StaticFunction void VoiceChat.MutePlayerInChannel(Player player, string channelName)
	Added StaticFunction void VoiceChat.UnmutePlayerInChannel(Player player, string channelName)
	Added StaticFunction boolean VoiceChat.IsPlayerMutedInChannel(Player player, string channelName)
	Added StaticFunction boolean VoiceChat.IsPlayerSpeaking(Player player)
	Added StaticFunction number VoiceChat.GetPlayerSpeakingVolume(Player player)
	Added StaticFunction boolean VoiceChat.HasMicrophone(Player player)
	Added StaticFunction boolean VoiceChat.IsVoiceChatEnabled(Player player)
	Added StaticFunction VoiceChatMethod VoiceChat.GetVoiceChatMethod()
Changed Namespace World
	Added StaticFunction Array<HitResult> World.RaycastAll(Vector3 startPosition, Vector3 endPosition, [table  optionalParameters])
	Added StaticFunction HitResult World.Spherecast(Vector3 startPosition, Vector3 endPosition, number radius, [table  optionalParameters])
	Added StaticFunction Array<HitResult> World.SpherecastAll(Vector3 startPosition, Vector3 endPosition, number radius, [table  optionalParameters])
	Added StaticFunction HitResult World.Boxcast(Vector3 startPosition, Vector3 endPosition, Vector3 boxSize, [table  optionalParameters])
	Added StaticFunction Array<HitResult> World.BoxcastAll(Vector3 startPosition, Vector3 endPosition, Vector3 boxSize, [table  optionalParameters])
	Added StaticFunction Array<Object> World.FindObjectsOverlappingSphere(Vector3 position, number radius, [table  optionalParameters])
	Added StaticFunction Array<Object> World.FindObjectsOverlappingBox(Vector3 position, Vector3 boxSize, [table  optionalParameters])
Changed Namespace Environment
	Removed StaticFunction bool Environment.IsClient()
	Removed StaticFunction bool Environment.IsServer()
	Removed StaticFunction bool Environment.IsMultiplayerPreview()
	Removed StaticFunction bool Environment.IsSinglePlayerPreview()
	Removed StaticFunction bool Environment.IsPreview()
	Removed StaticFunction bool Environment.IsLocalGame()
	Removed StaticFunction bool Environment.IsHostedGame()
Changed Namespace Leaderboards
	Removed StaticFunction bool Leaderboards.HasLeaderboards()
Changed Namespace Teams
	Removed StaticFunction bool Teams.AreTeamsFriendly(integer team1, integer team2)
	Removed StaticFunction bool Teams.AreTeamsEnemies(integer team1, integer team2)
Changed Namespace UI
	Removed StaticFunction void UI.ShowDamageDirection(CoreObject sourceObject)
	Removed StaticFunction void UI.ShowDamageDirection(Player sourcePlayer)
	Removed StaticFunction void UI.ShowDamageDirection(Vector3 sourceWorldPosition)
	Removed StaticFunction bool UI.IsCursorVisible()
	Removed StaticFunction void UI.SetCursorVisible(bool isVisible)
	Removed StaticFunction bool UI.IsCursorLockedToViewport()
	Removed StaticFunction void UI.SetCursorLockedToViewport(bool isLocked)
	Removed StaticFunction bool UI.CanCursorInteractWithUI()
	Removed StaticFunction void UI.SetCanCursorInteractWithUI(bool canInteract)
	Removed StaticFunction bool UI.IsReticleVisible()
	Removed StaticFunction void UI.SetReticleVisible(bool isVisible)

Added Enum BroadcastMessageResultCode
	Added Value SUCCESS: 0
	Added Value FAILURE: 1
	Added Value EXCEEDED_SIZE_LIMIT: 2
	Added Value EXCEEDED_RATE_WARNING_LIMIT: 3
	Added Value EXCEEDED_RATE_LIMIT: 4
Added Enum CameraCaptureResolution
	Added Value VERY_SMALL: 0
	Added Value SMALL: 1
	Added Value MEDIUM: 2
	Added Value LARGE: 3
	Added Value VERY_LARGE: 4
Added Enum CoreGameEventState
	Added Value ACTIVE: 1
	Added Value SCHEDULED: 0
	Added Value CANCELED: 2
Added Enum CoreModalType
	Added Value PAUSE_MENU: 1
	Added Value CHARACTER_PICKER: 2
	Added Value MOUNT_PICKER: 3
	Added Value EMOTE_PICKER: 4
	Added Value SOCIAL_MENU: 6
Added Enum CurveExtrapolation
	Added Value CYCLE: 0
	Added Value CYCLE_WITH_OFFSET: 1
	Added Value OSCILLATE: 2
	Added Value LINEAR: 3
	Added Value CONSTANT: 4
Added Enum CurveInterpolation
	Added Value LINEAR: 0
	Added Value CONSTANT: 1
	Added Value CUBIC: 2
Added Enum DetailLevel
	Added Value LOW: 0
	Added Value MEDIUM: 1
	Added Value HIGH: 2
	Added Value ULTRA: 3
Added Enum IKAnchorType
	Added Value LEFT_HAND: 0
	Added Value RIGHT_HAND: 1
	Added Value PELVIS: 2
	Added Value LEFT_FOOT: 3
	Added Value RIGHT_FOOT: 4
Added Enum ImageTileType
	Added Value NONE: 0
	Added Value HORIZONTAL: 1
	Added Value VERTICAL: 2
	Added Value BOTH: 3
Added Enum InputType
	Added Value KEYBOARD_AND_MOUSE: 0
	Added Value CONTROLLER: 1
	Added Value TOUCH: 2
Changed Enum NetReferenceType
	Added Value SHARED_PLAYER_STORAGE: 2
	Added Value CONCURRENT_SHARED_PLAYER_STORAGE: 4
	Added Value CONCURRENT_CREATOR_STORAGE: 5
Added Enum NetworkContextType
	Added Value NETWORKED: 2
	Added Value CLIENT_CONTEXT: 3
	Added Value SERVER_CONTEXT: 4
	Added Value STATIC_CONTEXT: 5
	Added Value LOCAL_CONTEXT: 6
Added Enum Orientation
	Added Value HORIZONTAL: 0
	Added Value VERTICAL: 1
Added Enum PlayerTransferReason
	Added Value UNKNOWN: 0
	Added Value CHARACTER: 1
	Added Value CREATE: 2
	Added Value SHOP: 3
	Added Value BROWSE: 4
	Added Value SOCIAL: 5
	Added Value PORTAL: 6
	Added Value AFK: 7
	Added Value EXIT: 8
	Added Value PORTAL_SCENE: 9
Added Enum PrivateNetworkedDataResultCode
	Added Value SUCCESS: 0
	Added Value FAILURE: 1
	Added Value EXCEEDED_SIZE_LIMIT: 2
Added Enum ProgressBarFillType
	Added Value LEFT_TO_RIGHT: 0
	Added Value RIGHT_TO_LEFT: 1
	Added Value TOP_TO_BOTTOM: 3
	Added Value BOTTOM_TO_TOP: 4
	Added Value FROM_CENTER: 2
Added Enum RespawnMode
	Added Value NONE: 0
	Added Value IN_PLACE: 1
	Added Value ROUND_ROBIN: 2
	Added Value AT_CLOSEST_SPAWN_POINT: 3
	Added Value FARTHEST_FROM_OTHER_PLAYERS: 4
	Added Value FARTHEST_FROM_ENEMY: 5
	Added Value RANDOM: 6
Added Enum RewardsDialogTab
	Added Value QUESTS: 1
	Added Value GAMES: 2
Added Enum SpawnMode
	Added Value RANDOM: 0
	Added Value ROUND_ROBIN: 1
	Added Value FARTHEST_FROM_OTHER_PLAYERS: 2
	Added Value FARTHEST_FROM_ENEMY: 3
Changed Enum StorageResultCode
	Added Value REQUEST_ALREADY_QUEUED: 4
Added Enum VoiceChannelType
	Added Value NORMAL: 0
	Added Value POSITIONAL: 1
Added Enum VoiceChatMethod
	Added Value PUSH_TO_TALK: 0
	Added Value DETECT_SPEAKING: 2
Added Enum VoiceChatMode
	Added Value NONE: 0
	Added Value TEAM: 1
	Added Value ALL: 2
Changed Enum MovementMode
	Removed Value SLIDING: 6
